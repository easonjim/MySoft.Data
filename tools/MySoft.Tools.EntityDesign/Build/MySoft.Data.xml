<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MySoft.Data</name>
    </assembly>
    <members>
        <member name="T:MySoft.Data.IEntityInfo">
            <summary>
            实体相关信息
            </summary>
        </member>
        <member name="P:MySoft.Data.IEntityInfo.Table">
            <summary>
            表信息
            </summary>
        </member>
        <member name="P:MySoft.Data.IEntityInfo.Fields">
            <summary>
            字段信息
            </summary>
        </member>
        <member name="P:MySoft.Data.IEntityInfo.FieldValues">
            <summary>
            字段及值信息
            </summary>
        </member>
        <member name="P:MySoft.Data.IEntityInfo.UpdateFields">
            <summary>
            更新字段
            </summary>
        </member>
        <member name="P:MySoft.Data.IEntityInfo.UpdateFieldValues">
            <summary>
            更新字段及值信息
            </summary>
        </member>
        <member name="P:MySoft.Data.IEntityInfo.IsUpdate">
            <summary>
            是否修改
            </summary>
        </member>
        <member name="P:MySoft.Data.IEntityInfo.IsReadOnly">
            <summary>
            是否只读 (只读时为视图或自定义实例)
            </summary>
        </member>
        <member name="T:MySoft.Data.IEntityBase">
            <summary>
            实体基类接口
            </summary>
        </member>
        <member name="M:MySoft.Data.IEntityBase.As``1">
            <summary>
            转换成另一对象
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IEntityBase.ToRowReader">
            <summary>
            返回一个行阅读对象
            </summary>
        </member>
        <member name="M:MySoft.Data.IEntityBase.ToDictionary">
            <summary>
            返回字典对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IEntityBase.CloneObject">
            <summary>
            克隆一个对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IEntityBase.GetObjectState">
            <summary>
            获取对象状态
            </summary>
        </member>
        <member name="M:MySoft.Data.IEntityBase.GetOriginalObject">
            <summary>
            获取原始对象
            </summary>
        </member>
        <member name="M:MySoft.Data.IEntityBase.GetValue(System.String)">
            <summary>
            使用propertyName获取值信息
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IEntityBase.SetValue(System.String,System.Object)">
            <summary>
            使用propertyName获设置信息
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IEntityBase.GetValue(MySoft.Data.Field)">
            <summary>
            使用field获取值信息
            </summary>
            <param name="FieldName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IEntityBase.SetValue(MySoft.Data.Field,System.Object)">
            <summary>
            使用field获设置信息
            </summary>
            <param name="FieldName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IEntityBase.GetField(System.String)">
            <summary>
            通过属性获取字段
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.Design.IEntity">
            <summary>
            实体接口
            </summary>
        </member>
        <member name="M:MySoft.Data.Design.IEntity.Attach(MySoft.Data.Field[])">
            <summary>
            置为修改状态并移除字段
            </summary>
            <param name="removeFields"></param>
        </member>
        <member name="M:MySoft.Data.Design.IEntity.AttachSet(MySoft.Data.Field[])">
            <summary>
            置为修改状态并设置字段
            </summary>
            <param name="setFields"></param>
        </member>
        <member name="M:MySoft.Data.Design.IEntity.AttachAll(MySoft.Data.Field[])">
            <summary>
            置为修改状态并移除字段
            </summary>
            <param name="removeFields"></param>
        </member>
        <member name="M:MySoft.Data.Design.IEntity.Detach(MySoft.Data.Field[])">
            <summary>
            置为插入状态并移除字段
            </summary>
            <param name="removeFields"></param>
        </member>
        <member name="M:MySoft.Data.Design.IEntity.DetachSet(MySoft.Data.Field[])">
            <summary>
            置为插入状态并设置字段
            </summary>
            <param name="setFields"></param>
        </member>
        <member name="M:MySoft.Data.Design.IEntity.DetachAll(MySoft.Data.Field[])">
            <summary>
            置为插入状态并移除字段
            </summary>
            <param name="removeFields"></param>
        </member>
        <member name="T:MySoft.Data.MsAccess.MsAccessProvider">
            <summary>
            Access 驱动
            </summary>
        </member>
        <member name="M:MySoft.Data.IDbProvider.AddParameter(System.Data.Common.DbCommand,System.Data.Common.DbParameter[])">
            <summary>
            给命令添加参数
            </summary>
            <param name="cmd"></param>
            <param name="plist"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IDbProvider.AddParameter(System.Data.Common.DbCommand,MySoft.Data.SQLParameter[])">
            <summary>
            给命令添加参数
            </summary>
            <param name="cmd"></param>
            <param name="plist"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IDbProvider.CreateConnection">
            <summary>
            创建DbConnection
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IDbProvider.CreateParameter">
            <summary>
            创建参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.AddParameter(System.Data.Common.DbCommand,System.Data.Common.DbParameter[])">
            <summary>
            给命令添加参数
            </summary>
            <param name="cmd"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:MySoft.Data.DbProvider.AddParameter(System.Data.Common.DbCommand,MySoft.Data.SQLParameter[])">
            <summary>
            给命令添加参数
            </summary>
            <param name="cmd"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.AddInputParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            添加输入参数
            </summary>
            <param name="cmd"></param>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="size"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.DbProvider.AddInputParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Object)">
            <summary>
            添加输入参数
            </summary>
            <param name="cmd"></param>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.DbProvider.AddOutputParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32)">
            <summary>
            添加输出参数
            </summary>
            <param name="cmd"></param>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="size"></param>
        </member>
        <member name="M:MySoft.Data.DbProvider.AddOutputParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType)">
            <summary>
            添加输出参数
            </summary>
            <param name="cmd"></param>
            <param name="parameterName"></param>
            <param name="dbType"></param>
        </member>
        <member name="M:MySoft.Data.DbProvider.AddInputOutputParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            添加输入输出参数
            </summary>
            <param name="cmd"></param>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="size"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.DbProvider.AddInputOutputParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Object)">
            <summary>
            添加输入输出参数
            </summary>
            <param name="cmd"></param>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.DbProvider.AddReturnValueParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32)">
            <summary>
            添加返回参数
            </summary>
            <param name="cmd"></param>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="size"></param>
        </member>
        <member name="M:MySoft.Data.DbProvider.AddReturnValueParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType)">
            <summary>
            添加返回参数
            </summary>
            <param name="cmd"></param>
            <param name="parameterName"></param>
            <param name="dbType"></param>
        </member>
        <member name="M:MySoft.Data.DbProvider.PrepareCommand(System.Data.Common.DbCommand)">
            <summary>
            调整DbCommand命令
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.CreateConnection">
            <summary>
            创建DbConnection
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.CreateParameter">
            <summary>
            创建参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.FormatCommandText(System.String)">
            <summary>
            返回最终排序的SQL
            </summary>
            <param name="cmdText"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.CreateSqlCommand(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            创建SQL命令
            </summary>
            <param name="cmdText"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.CreateProcCommand(System.String)">
            <summary>
            创建存储过程命令
            </summary>
            <param name="procName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.StartExcuteCommand(System.Data.Common.DbCommand)">
            <summary>
            Writes the log.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:MySoft.Data.DbProvider.EndExcuteCommand(System.Data.Common.DbCommand,System.Object,System.Int32)">
            <summary>
            结束时执行的操作
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:MySoft.Data.DbProvider.WriteErrorCommand(System.Exception,System.Data.Common.DbCommand)">
            <summary>
            Writes the exception log.
            </summary>
            <param name="ex"></param>
            <param name="command"></param>
        </member>
        <member name="M:MySoft.Data.DbProvider.GetLog(System.Data.Common.DbCommand)">
            <summary>
            获取输出的日志
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.GetAutoIncrement(System.String)">
            <summary>
            获取IdentityName
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.CreatePageQuery``1(MySoft.Data.QuerySection{``0},System.Int32,System.Int32)">
            <summary>
            创建分页查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="itemCount"></param>
            <param name="skipCount"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.GetParameterType(System.Data.Common.DbParameter)">
            <summary>
            获取参数类型
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.CreateParameter(System.String,System.Object)">
            <summary>
            创建DbParameter
            </summary>
            <param name="parameterName"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.PrepareParameter(System.Data.Common.DbCommand)">
            <summary>
            调整DbCommand参数
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.CreateOrmParameter(System.Object)">
            <summary>
            创建OrmParameter
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.CheckValue(System.Object)">
            <summary>
            检测是否为非法值
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.DbProvider.Logger">
            <summary>
            日志依赖
            </summary>
        </member>
        <member name="P:MySoft.Data.DbProvider.Cache">
            <summary>
            缓存依赖
            </summary>
        </member>
        <member name="P:MySoft.Data.DbProvider.Timeout">
            <summary>
            超时时间
            </summary>
        </member>
        <member name="P:MySoft.Data.DbProvider.AccessProvider">
            <summary>
            是否为Access驱动
            </summary>
        </member>
        <member name="P:MySoft.Data.DbProvider.AllowAutoIncrement">
            <summary>
            是否使用自增列
            </summary>
        </member>
        <member name="P:MySoft.Data.DbProvider.SupportBatch">
            <summary>
            是否支持批处理
            </summary>
        </member>
        <member name="P:MySoft.Data.DbProvider.AutoIncrementValue">
            <summary>
            返回自动ID的sql语句
            </summary>
        </member>
        <member name="M:MySoft.Data.MsAccess.MsAccessProvider.GetParameterType(System.Data.Common.DbParameter)">
            <summary>
            获取参数类型
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.MsAccess.MsAccessProvider.CreateParameter(System.String,System.Object)">
            <summary>
            创建DbParameter
            </summary>
            <param name="parameterName"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.MsAccess.MsAccessProvider.PrepareParameter(System.Data.Common.DbCommand)">
            <summary>
            调整命令
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.MsAccess.MsAccessProvider.AccessProvider">
            <summary>
            是否为access驱动
            </summary>
        </member>
        <member name="P:MySoft.Data.MsAccess.MsAccessProvider.SupportBatch">
            <summary>
            是否支持批处理
            </summary>
        </member>
        <member name="P:MySoft.Data.MsAccess.MsAccessProvider.AutoIncrementValue">
            <summary>
            返回自动ID的sql语句
            </summary>
        </member>
        <member name="T:MySoft.Data.Table`1">
            <summary>
            表信息
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:MySoft.Data.Table">
            <summary>
            数据库查询时用户传入的自定义信息表
            </summary>
        </member>
        <member name="M:MySoft.Data.Table.#ctor(System.String)">
            <summary>
            实例化一个表
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:MySoft.Data.Table.As(System.String)">
            <summary>
            指定表别名
            </summary>
            <param name="aliasName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Table.GetTable``1">
            <summary>
            返回一个Table实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Table.GetTable``1(System.String)">
            <summary>
            返回一个Table实例
            </summary>
            <param name="suffix">后缀名称</param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Table.GetTable``1(System.String,System.String)">
            <summary>
            返回一个Table实例
            </summary>
            <param name="prefix">前缀名称</param>
            <param name="suffix">后缀名称</param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Table.From``1">
            <summary>
            返回一个表关系
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Table.From``1(MySoft.Data.Table)">
            <summary>
            返回一个表关系
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.Table.Item(System.String)">
            <summary>
            返回一个Field
            </summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.Table.Name">
            <summary>
            表名称
            </summary>
        </member>
        <member name="P:MySoft.Data.Table.TableName">
            <summary>
            设置表名
            </summary>
        </member>
        <member name="P:MySoft.Data.Table.AliasName">
            <summary>
            表别名
            </summary>
        </member>
        <member name="P:MySoft.Data.Table.Prefix">
            <summary>
            设置表前缀
            </summary>
        </member>
        <member name="P:MySoft.Data.Table.Suffix">
            <summary>
            设置表后缀
            </summary>
        </member>
        <member name="P:MySoft.Data.Table.OriginalName">
            <summary>
            获取原始的表名
            </summary>
        </member>
        <member name="M:MySoft.Data.Table`1.#ctor(System.String)">
            <summary>
            实例化一个表
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="T:MySoft.Data.DbBatch">
            <summary>
            批处理
            </summary>
        </member>
        <member name="M:MySoft.Data.IDbProcess.InsertOrUpdate``1(``0,MySoft.Data.Field[])">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IDbProcess.InsertOrUpdate``1(MySoft.Data.FieldValue[],MySoft.Data.WhereClip)">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fvs"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IDbProcess.InsertOrUpdate``1(MySoft.Data.Table,``0,MySoft.Data.Field[])">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IDbProcess.InsertOrUpdate``1(MySoft.Data.Table,MySoft.Data.FieldValue[],MySoft.Data.WhereClip)">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fvs"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IDbBatch.Execute(System.Collections.Generic.IList{MySoft.Data.DataException}@)">
            <summary>
            执行批处理操作
            </summary>
            <param name="errors">输出的错误</param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Execute(System.Collections.Generic.IList{MySoft.Data.DataException}@)">
            <summary>
            执行批处理操作
            </summary>
            <param name="errors">输出的错误</param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Save``1(MySoft.Data.Table,``0)">
            <summary>
            保存一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.AddCommand(System.Data.Common.DbCommand)">
            <summary>
            添加命令到队列中
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:MySoft.Data.DbBatch.Insert``1(MySoft.Data.Table,System.Collections.Generic.List{MySoft.Data.FieldValue},System.Object@)">
            <summary>
            插入值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="table"></param>
            <param name="fvlist"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Update``1(MySoft.Data.Table,System.Collections.Generic.List{MySoft.Data.FieldValue},MySoft.Data.WhereClip)">
            <summary>
            保存一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="table"></param>
            <param name="fvlist"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Delete``1(MySoft.Data.Table,``0)">
            <summary>
            删除一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Delete``1(MySoft.Data.Table,System.Object[])">
            <summary>
            按主键删除指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.InsertOrUpdate``1(MySoft.Data.Table,``0,MySoft.Data.Field[])">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.InsertOrUpdate``1(MySoft.Data.Table,MySoft.Data.FieldValue[],MySoft.Data.WhereClip)">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fvs"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Save``1(``0)">
            <summary>
            保存一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Delete``1(``0)">
            <summary>
            删除一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Delete``1(System.Object[])">
            <summary>
            按主键删除指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.InsertOrUpdate``1(``0,MySoft.Data.Field[])">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.InsertOrUpdate``1(MySoft.Data.FieldValue[],MySoft.Data.WhereClip)">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fvs"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Exists``1(MySoft.Data.Table,``0,MySoft.Data.Field[])">
            <summary>
            判断记录是否存在
            </summary>
            <typeparam name="T"></typeparam>
            <param name="table"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Exists``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            判断记录是否存在
            </summary>
            <typeparam name="T"></typeparam>
            <param name="table"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.Mapping.TableSetting">
            <summary>
            表映射设置
            </summary>
        </member>
        <member name="M:MySoft.Data.Mapping.TableSetting.#ctor">
            <summary>
            初始化TableSetting
            </summary>
        </member>
        <member name="P:MySoft.Data.Mapping.TableSetting.Namespace">
            <summary>
            命名空间
            </summary>
        </member>
        <member name="P:MySoft.Data.Mapping.TableSetting.Prefix">
            <summary>
            表前缀
            </summary>
        </member>
        <member name="P:MySoft.Data.Mapping.TableSetting.Suffix">
            <summary>
            表后缀
            </summary>
        </member>
        <member name="P:MySoft.Data.Mapping.TableSetting.Mappings">
            <summary>
            表映射
            </summary>
        </member>
        <member name="T:MySoft.Data.Mapping.TableMapping">
            <summary>
            表映射节点
            </summary>
        </member>
        <member name="M:MySoft.Data.Mapping.TableMapping.#ctor">
            <summary>
            初始化TableMapping
            </summary>
        </member>
        <member name="P:MySoft.Data.Mapping.TableMapping.ClassName">
            <summary>
            类名称
            </summary>
        </member>
        <member name="P:MySoft.Data.Mapping.TableMapping.UsePrefix">
            <summary>
            使用前缀
            </summary>
        </member>
        <member name="P:MySoft.Data.Mapping.TableMapping.UseSuffix">
            <summary>
            使用后缀
            </summary>
        </member>
        <member name="P:MySoft.Data.Mapping.TableMapping.MappingName">
            <summary>
            映射的表名
            </summary>
        </member>
        <member name="P:MySoft.Data.Mapping.TableMapping.Mappings">
            <summary>
            字段映射
            </summary>
        </member>
        <member name="T:MySoft.Data.Mapping.FieldMapping">
            <summary>
            字段映射节点
            </summary>
        </member>
        <member name="P:MySoft.Data.Mapping.FieldMapping.PropertyName">
            <summary>
            属性名称
            </summary>
        </member>
        <member name="P:MySoft.Data.Mapping.FieldMapping.MappingName">
            <summary>
            映射的字段名
            </summary>
        </member>
        <member name="T:MySoft.Data.DbSession">
            <summary>
            会话操作对象
            </summary>
        </member>
        <member name="M:MySoft.Data.IDbSession.RegisterDecryptHandler(MySoft.Data.DecryptEventHandler)">
            <summary>
            注册解密的Handler
            </summary>
            <param name="handler"></param>
        </member>
        <member name="M:MySoft.Data.IDbSession.RegisterExcutingLog(MySoft.Data.IExcutingLog)">
            <summary>
            注册日志依赖
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:MySoft.Data.IDbSession.RegisterCacheDependent(MySoft.Cache.ICacheDependent,System.Int32)">
            <summary>
            注册缓存依赖
            </summary>
            <param name="cache"></param>
            <param name="timeout"></param>
        </member>
        <member name="F:MySoft.Data.DbSession.Default">
            <summary>
            默认会话对象
            </summary>
        </member>
        <member name="M:MySoft.Data.DbSession.#ctor(System.String)">
            <summary>
             指定配制节名实例化一个Session会话
            </summary>
            <param name="connectName"></param>
        </member>
        <member name="M:MySoft.Data.DbSession.#ctor(MySoft.Data.DbProvider)">
            <summary>
            指定驱动实例化一个Session会话
            </summary>
            <param name="dbProvider"></param>
        </member>
        <member name="M:MySoft.Data.DbSession.SetDefault(System.String)">
            <summary>
            设置指定配制节名Session会话为默认会话
            </summary>
            <param name="connectName"></param>
        </member>
        <member name="M:MySoft.Data.DbSession.SetDefault(MySoft.Data.DbProvider)">
            <summary>
            设置指定驱动Session会话为默认会话
            </summary>
            <param name="dbProvider"></param>
        </member>
        <member name="M:MySoft.Data.DbSession.SetProvider(System.String)">
            <summary>
            设置新的驱动
            </summary>
            <param name="connectName"></param>
        </member>
        <member name="M:MySoft.Data.DbSession.SetProvider(MySoft.Data.DbProvider)">
            <summary>
            设置新的驱动
            </summary>
            <param name="dbProvider"></param>
        </member>
        <member name="M:MySoft.Data.DbSession.BeginTrans">
            <summary>
            开始一个事务
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.BeginTrans(System.Data.IsolationLevel)">
            <summary>
            开始一个事务
            </summary>
            <param name="isolationLevel"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.SetTransaction(System.Data.Common.DbTransaction)">
            <summary>
            设置一个外部事务
            </summary>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.BeginTransaction">
            <summary>
            开始一个外部事务
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            开始一个外部事务
            </summary>
            <param name="isolationLevel"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.SetConnection(System.Data.Common.DbConnection)">
            <summary>
            设置一个外部链接
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.CreateConnection">
            <summary>
            创建一个外部连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.CreateParameter">
            <summary>
            创建参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Single``1(MySoft.Data.Table,System.Object[])">
            <summary>
            按主键获取一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Single``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            按条件获取一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Exists``1(MySoft.Data.Table,``0)">
            <summary>
            是否存在指定的实体，按主键匹配
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Exists``1(MySoft.Data.Table,System.Object[])">
            <summary>
            是否存在指定主键的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Exists``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            是否存在指定条件的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Count``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            按条件获取记录条数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Sum``1(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Sum操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Avg``1(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Avg操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Max``1(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Max操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Min``1(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Min操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Sum``2(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Sum操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Avg``2(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Avg操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Max``2(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Max操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Min``2(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Min操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Single``1(System.Object[])">
            <summary>
            按主键获取一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Single``1(MySoft.Data.WhereClip)">
            <summary>
            按条件获取一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Exists``1(``0)">
            <summary>
            是否存在指定的实体，按主键匹配
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Exists``1(System.Object[])">
            <summary>
            是否存在指定主键的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Exists``1(MySoft.Data.WhereClip)">
            <summary>
            是否存在指定条件的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Count``1(MySoft.Data.WhereClip)">
            <summary>
            按条件获取记录条数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Sum``1(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Sum操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Avg``1(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Avg操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Max``1(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Max操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Min``1(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Min操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Sum``2(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Sum操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Avg``2(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Avg操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Max``2(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Max操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Min``2(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Min操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.From``1(MySoft.Data.TableRelation{``0})">
            <summary>
            返回一个From节
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Query``2">
            <summary>
            返回一个查询
            </summary>
            <typeparam name="TResult"></typeparam>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.From``1">
            <summary>
            返回一个From节
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.From``1(MySoft.Data.Table)">
            <summary>
            返回一个From节
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.From``1(System.String)">
            <summary>
            返回一个From节，并可指定其别名
            </summary>
            <typeparam name="T"></typeparam>
            <param name="aliasName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.FromSql(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            返回一个Sql节
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.FromProc(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            返回一个Proc节
            </summary>
            <param name="procName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.FromSql(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            返回一个Sql节
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.FromProc(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            返回一个Proc节
            </summary>
            <param name="procName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Excute(MySoft.Data.InsertCreator)">
            <summary>
            插入数据
            </summary>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Excute``1(MySoft.Data.InsertCreator,``0@)">
            <summary>
             插入数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="creator"></param>
            <param name="identityValue"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Excute(MySoft.Data.DeleteCreator)">
            <summary>
            按条件删除指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Excute(MySoft.Data.UpdateCreator)">
            <summary>
            更新数据
            </summary>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.From(MySoft.Data.QueryCreator)">
            <summary>
             返回一个Query节
            </summary>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.BeginBatch">
            <summary>
            返回一个Batch
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.BeginBatch(System.Int32)">
            <summary>
            返回一个Batch
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Save``1(MySoft.Data.Table,``0)">
            <summary>
            保存一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Insert``1(MySoft.Data.Table,MySoft.Data.Field[],System.Object[])">
            <summary>
             插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Insert``2(MySoft.Data.Table,MySoft.Data.Field[],System.Object[],``1@)">
            <summary>
             插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Delete``1(MySoft.Data.Table,``0)">
            <summary>
            删除一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Delete``1(MySoft.Data.Table,System.Object[])">
            <summary>
            删除指定主键的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Delete``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            删除符合条件的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.InsertOrUpdate``1(MySoft.Data.Table,``0,MySoft.Data.Field[])">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.InsertOrUpdate``1(MySoft.Data.Table,MySoft.Data.FieldValue[],MySoft.Data.WhereClip)">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fvs"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Update``1(MySoft.Data.Table,MySoft.Data.Field,System.Object,MySoft.Data.WhereClip)">
            <summary>
            更新指定条件的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Update``1(MySoft.Data.Table,MySoft.Data.Field[],System.Object[],MySoft.Data.WhereClip)">
            <summary>
            更新指定条件的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Save``1(``0)">
            <summary>
            保存一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Insert``1(MySoft.Data.Field[],System.Object[])">
            <summary>
             插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Insert``2(MySoft.Data.Field[],System.Object[],``1@)">
            <summary>
            插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Delete``1(``0)">
            <summary>
            删除一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Delete``1(System.Object[])">
            <summary>
            按主键删除指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Delete``1(MySoft.Data.WhereClip)">
            <summary>
            按条件删除指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.InsertOrUpdate``1(``0,MySoft.Data.Field[])">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.InsertOrUpdate``1(MySoft.Data.FieldValue[],MySoft.Data.WhereClip)">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fvs"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Update``1(MySoft.Data.Field,System.Object,MySoft.Data.WhereClip)">
            <summary>
            按条件更新指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Update``1(MySoft.Data.Field[],System.Object[],MySoft.Data.WhereClip)">
            <summary>
            按条件更新指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Serialization(MySoft.Data.WhereClip)">
            <summary>
            返回最终条件的SQL
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Serialization(MySoft.Data.OrderByClip)">
            <summary>
            返回最终排序的SQL
            </summary>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.RegisterDecryptHandler(MySoft.Data.DecryptEventHandler)">
            <summary>
            注册解密的Handler
            </summary>
            <param name="handler"></param>
        </member>
        <member name="M:MySoft.Data.DbSession.RegisterExcutingLog(MySoft.Data.IExcutingLog)">
            <summary>
            注册日志依赖
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:MySoft.Data.DbSession.RegisterCacheDependent(MySoft.Cache.ICacheDependent,System.Int32)">
            <summary>
            注册缓存依赖
            </summary>
            <param name="cache"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:MySoft.Data.DbSession.Insert``1(MySoft.Data.FieldValue[])">
            <summary>
            插入数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fvs"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Insert``2(MySoft.Data.FieldValue[],``1@)">
            <summary>
            插入数据
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="fvs"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Update``1(MySoft.Data.FieldValue,MySoft.Data.WhereClip)">
            <summary>
            更新数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fv"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Update``1(MySoft.Data.FieldValue[],MySoft.Data.WhereClip)">
            <summary>
            更新数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fvs"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Insert``1(MySoft.Data.Table,MySoft.Data.FieldValue[])">
            <summary>
            插入数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="table"></param>
            <param name="fvs"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Insert``2(MySoft.Data.Table,MySoft.Data.FieldValue[],``1@)">
            <summary>
            插入数据
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="table"></param>
            <param name="fvs"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Update``1(MySoft.Data.Table,MySoft.Data.FieldValue,MySoft.Data.WhereClip)">
            <summary>
            更新数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="table"></param>
            <param name="fv"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Update``1(MySoft.Data.Table,MySoft.Data.FieldValue[],MySoft.Data.WhereClip)">
            <summary>
            更新数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="table"></param>
            <param name="fvs"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Insert``2(``0,``1@,MySoft.Data.FieldValue[])">
            <summary>
            插入实体
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="entity"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Insert``2(MySoft.Data.Table,``0,``1@,MySoft.Data.FieldValue[])">
            <summary>
            插入实体
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="table"></param>
            <param name="entity"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.TopSection`1">
            <summary>
            Top对应的Query查询
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MySoft.Data.IPaging.Prefix(System.String)">
            <summary>
            设置前缀
            </summary>
            <param name="prefix"></param>
        </member>
        <member name="M:MySoft.Data.IPaging.Suffix(System.String)">
            <summary>
            设置后缀
            </summary>
            <param name="suffix"></param>
        </member>
        <member name="M:MySoft.Data.IPaging.End(System.String)">
            <summary>
            设置结尾
            </summary>
            <param name="end"></param>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.MySoft#Data#IPaging#Prefix(System.String)">
            <summary>
            前置值如 top n
            </summary>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.MySoft#Data#IPaging#Suffix(System.String)">
            <summary>
            结尾值如 row_number()
            </summary>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.MySoft#Data#IPaging#End(System.String)">
            <summary>
            设置值如 limit n
            </summary>
            <param name="end"></param>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToList``1(System.Int32,System.Int32)">
            <summary>
            返回一个列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToList``1">
            <summary>
            返回一个列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToSingle``1">
            <summary>
            返回一个实体
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.SubQuery">
            <summary>
            生成一个子查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.SubQuery(System.String)">
            <summary>
            生成一个子查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.SubQuery``1">
            <summary>
            生成一个子查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.SubQuery``1(System.String)">
            <summary>
            生成一个子查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.CreateQuery``1">
            <summary>
            创建一个跟当前相同的子查询
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.GroupBy(MySoft.Data.GroupByClip)">
            <summary>
            进行GroupBy操作
            </summary>
            <param name="groupBy"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.OrderBy(MySoft.Data.OrderByClip)">
            <summary>
            进行OrderBy操作
            </summary>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.GetTop(System.Int32)">
            <summary>
            选取前N条数据
            </summary>
            <param name="topSize"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.SetPagingField(MySoft.Data.Field)">
            <summary>
            设置分页字段
            </summary>
            <param name="pagingField"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.Select(MySoft.Data.Field[])">
            <summary>
            选择输出的列
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.Select(MySoft.Data.ExcludeField)">
            <summary>
            选择被排除以外的列（用于列多时排除某几列的情况）
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.Where(MySoft.Data.WhereClip)">
            <summary>
            注入当前查询的条件
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.Union(MySoft.Data.QuerySection{`0})">
            <summary>
            进行Union操作
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.UnionAll(MySoft.Data.QuerySection{`0})">
            <summary>
            进行Union操作
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.Union(MySoft.Data.QuerySection{`0},System.Boolean)">
            <summary>
            进行Union操作
            </summary>
            <param name="query"></param>
            <param name="isUnionAll"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.Having(MySoft.Data.WhereClip)">
            <summary>
            进行Having操作
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.Distinct">
            <summary>
            进行Distinct操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.GetPage(System.Int32)">
            <summary>
            返回一个分页处理的Page节
            </summary>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToSingle">
            <summary>
            返回一个实体
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToListResult(System.Int32,System.Int32)">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToListResult">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToListResult``1(System.Int32,System.Int32)">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToListResult``1">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToList">
            <summary>
            返回IArrayList
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToList(System.Int32,System.Int32)">
            <summary>
            返回IArrayList
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToReader(System.Int32,System.Int32)">
            <summary>
            返回一个DbReader
            </summary>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToReader">
            <summary>
            返回一个DbReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToTable(System.Int32,System.Int32)">
            <summary>
            返回一个DataTable
            </summary>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToTable">
            <summary>
            返回一个DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToScalar``1">
            <summary>
            返回一个值
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToScalar">
            <summary>
            返回一个值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.Count">
            <summary>
            返回当前查询记录数
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.GetPageCount(System.Int32)">
            <summary>
            获取总页数
            </summary>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.GetCacheKey(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            获取缓存的Key
            </summary>
            <param name="sql"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.GetCache``1(System.String,System.String)">
            <summary>
            获取缓存信息
            </summary>
            <typeparam name="CacheType"></typeparam>
            <param name="prefix"></param>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.SetCache``1(System.String,System.String,System.Object)">
            <summary>
            设置缓存信息
            </summary>
            <typeparam name="CacheType"></typeparam>
            <param name="prefix"></param>
            <param name="cacheKey"></param>
            <param name="obj"></param>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToListPage(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToTablePage(System.Int32,System.Int32)">
            <summary>
            返回DataPage
            </summary>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.QuerySection`1.FromSection">
            <summary>
            表名
            </summary>
        </member>
        <member name="M:MySoft.Data.TopSection`1.ToListResult">
            <summary>
            返回结果列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TopSection`1.ToListResult``1">
            <summary>
            返回结果列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TopSection`1.ToList">
            <summary>
            返回实体列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TopSection`1.ToList``1">
            <summary>
            返回实体列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TopSection`1.ToReader">
            <summary>
            返回阅读器
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TopSection`1.ToTable">
            <summary>
            返回表数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToSingle``1">
            <summary>
            返回一个实体
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.SubQuery">
            <summary>
            生成一个子查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.SubQuery(System.String)">
            <summary>
            生成一个子查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.SubQuery``1">
            <summary>
            生成一个子查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.SubQuery``1(System.String)">
            <summary>
            生成一个带别名的子查询
            </summary>
            <param name="aliasName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.GroupBy(MySoft.Data.GroupByClip)">
            <summary>
            进行GroupBy操作
            </summary>
            <param name="groupBy"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.OrderBy(MySoft.Data.OrderByClip)">
            <summary>
            进行OrderBy操作
            </summary>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.Select(MySoft.Data.Field[])">
            <summary>
            选择输出的列
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.Select(MySoft.Data.ExcludeField)">
            <summary>
            选择被排除以外的列（用于列多时排除某几列的情况）
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.Where(MySoft.Data.WhereClip)">
            <summary>
            注入当前查询的条件
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.Union(MySoft.Data.QuerySection{`0})">
            <summary>
            进行Union操作
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.UnionAll(MySoft.Data.QuerySection{`0})">
            <summary>
            进行Union操作
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.Having(MySoft.Data.WhereClip)">
            <summary>
            进行Having操作
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.SetPagingField(MySoft.Data.Field)">
            <summary>
            设置分页字段
            </summary>
            <param name="pagingField"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.GetTop(System.Int32)">
            <summary>
            选择前n条
            </summary>
            <param name="topSize"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.Distinct">
            <summary>
            进行Distinct操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.GetPage(System.Int32)">
            <summary>
            返回一个分页处理的Page节
            </summary>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToSingle">
            <summary>
            返回一个实体
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToListResult(System.Int32,System.Int32)">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToListResult">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToListResult``1(System.Int32,System.Int32)">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToListResult``1">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToReader(System.Int32,System.Int32)">
            <summary>
            返回一个DbReader
            </summary>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToReader">
            <summary>
            返回一个DbReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToList">
            <summary>
            返回IArrayList
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToList(System.Int32,System.Int32)">
            <summary>
            返回IArrayList
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToList``1">
            <summary>
            返回IArrayList
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToList``1(System.Int32,System.Int32)">
            <summary>
            返回IArrayList
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToTable(System.Int32,System.Int32)">
            <summary>
            返回一个DataTable
            </summary>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToTable">
            <summary>
            返回一个DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToScalar``1">
            <summary>
            返回一个值
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToScalar">
            <summary>
            返回一个值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.Count">
            <summary>
            返回当前查询记录数
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.GetPageCount(System.Int32)">
            <summary>
            获取总页数
            </summary>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToTablePage(System.Int32,System.Int32)">
            <summary>
            返回指定数据源的分页信息
            </summary>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.Oracle.OracleProvider">
            <summary>
            Oracle 驱动
            </summary>
        </member>
        <member name="M:MySoft.Data.Oracle.OracleProvider.GetAutoIncrement(System.String)">
            <summary>
            格式化IdentityName
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Oracle.OracleProvider.GetParameterType(System.Data.Common.DbParameter)">
            <summary>
            获取参数类型
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Oracle.OracleProvider.CreateParameter(System.String,System.Object)">
            <summary>
            创建DbParameter
            </summary>
            <param name="parameterName"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Oracle.OracleProvider.PrepareParameter(System.Data.Common.DbCommand)">
            <summary>
            调整DbCommand
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Oracle.OracleProvider.CreatePageQuery``1(MySoft.Data.QuerySection{``0},System.Int32,System.Int32)">
            <summary>
            创建分页
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="itemCount"></param>
            <param name="skipCount"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.Oracle.OracleProvider.SupportBatch">
            <summary>
            是否支持批处理
            </summary>
        </member>
        <member name="P:MySoft.Data.Oracle.OracleProvider.AllowAutoIncrement">
            <summary>
            是否使用自增列
            </summary>
        </member>
        <member name="P:MySoft.Data.Oracle.OracleProvider.AutoIncrementValue">
            <summary>
            返回自动ID的sql语句
            </summary>
        </member>
        <member name="T:MySoft.Data.IArrayList`1">
            <summary>
            可以输出Array的接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:MySoft.Data.IDataSource`1">
            <summary>
            数据源
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MySoft.Data.IDataSource`1.OriginalData">
            <summary>
            数据源
            </summary>
        </member>
        <member name="M:MySoft.Data.IArrayList`1.ToArray">
            <summary>
            返回数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IArrayList`1.ToDictionary``1(System.String)">
            <summary>
            返回字典
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IArrayList`1.ToDictionary``1(MySoft.Data.Field)">
            <summary>
            返回字典
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.IArrayList`1.Item(System.Int32)">
            <summary>
            获取当前索引的对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.ISourceList`1">
            <summary>
            数据源接口
            </summary>
        </member>
        <member name="T:MySoft.Data.IListConvert`1">
            <summary>
            列表转换
            </summary>
        </member>
        <member name="M:MySoft.Data.IListConvert`1.ConvertTo``1">
            <summary>
            返回另一类型的列表
            </summary>
            <typeparam name="TOutput"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IListConvert`1.ConvertTo``2">
            <summary>
            返回另一类型的列表(输出为接口)
            </summary>
            <typeparam name="TOutput"></typeparam>
            <typeparam name="IOutput"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IListConvert`1.ConvertAll``1(System.Converter{`0,``0})">
            <summary>
            将当前类型转成另一种类型
            </summary>
            <typeparam name="TOutput"></typeparam>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceList`1.ToTable">
            <summary>
            转换成SourceTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceList`1.ForEach(System.Action{`0})">
            <summary>
            循环item
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:MySoft.Data.ISourceList`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>
            排序，可以使用内部的SortComparer类来实现多列排序
            </summary>
            <param name="comparer"></param>
        </member>
        <member name="M:MySoft.Data.ISourceList`1.FindAll(System.Predicate{`0})">
            <summary>
            查找符合条件的对象
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceList`1.GetRange(System.Int32,System.Int32)">
            <summary>
            返回指定数据条数
            </summary>
            <param name="index"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.SQLParameter">
            <summary>
            SQL命令的参数
            </summary>
        </member>
        <member name="M:MySoft.Data.SQLParameter.#ctor">
            <summary>
            初始化SQLParameter
            </summary>
        </member>
        <member name="M:MySoft.Data.SQLParameter.#ctor(System.String)">
            <summary>
            初始化SQLParameter
            </summary>
            <param name="pName"></param>
        </member>
        <member name="M:MySoft.Data.SQLParameter.#ctor(System.String,System.Object)">
            <summary>
            初始化OrmParameter
            </summary>
            <param name="pName"></param>
            <param name="pValue"></param>
        </member>
        <member name="M:MySoft.Data.SQLParameter.#ctor(System.String,System.Object,System.Data.ParameterDirection)">
            <summary>
            初始化OrmParameter
            </summary>
            <param name="pName"></param>
            <param name="pValue"></param>
        </member>
        <member name="M:MySoft.Data.SQLParameter.#ctor(System.Data.Common.DbParameter)">
            <summary>
            通过DbParameter实例化对象
            </summary>
            <param name="dbParameter"></param>
        </member>
        <member name="P:MySoft.Data.SQLParameter.Name">
            <summary>
            参数名
            </summary>
        </member>
        <member name="P:MySoft.Data.SQLParameter.Value">
            <summary>
            参数值
            </summary>
        </member>
        <member name="P:MySoft.Data.SQLParameter.Direction">
            <summary>
            参数方向
            </summary>
        </member>
        <member name="T:MySoft.Data.TableJoin">
            <summary>
            TableJoin
            </summary>
        </member>
        <member name="T:MySoft.Data.QueryCreator">
            <summary>
            查询创建器
            </summary>
        </member>
        <member name="M:MySoft.Data.QueryCreator.NewCreator">
            <summary>
            创建一个新的查询器（条件为全部，排序为默认)
            </summary>
        </member>
        <member name="M:MySoft.Data.QueryCreator.NewCreator(System.String)">
            <summary>
            创建一个新的查询器（条件为全部，排序为默认)
            </summary>
        </member>
        <member name="M:MySoft.Data.QueryCreator.NewCreator(MySoft.Data.Table)">
            <summary>
            创建一个新的查询器（条件为全部，排序为默认)
            </summary>
        </member>
        <member name="M:MySoft.Data.QueryCreator.NewCreator``1">
            <summary>
            创建一个新的查询器（条件为全部，排序为默认)
            </summary>
        </member>
        <member name="M:MySoft.Data.QueryCreator.#ctor">
            <summary>
            实例化QueryCreater
            </summary>
        </member>
        <member name="M:MySoft.Data.QueryCreator.#ctor(System.String)">
            <summary>
            实例化QueryCreator
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.#ctor(MySoft.Data.Table)">
            <summary>
            实例化QueryCreator
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.From``1">
            <summary>
            设置表信息
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QueryCreator.From(System.String)">
            <summary>
            设置表名
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.From(MySoft.Data.Table)">
            <summary>
            设置表信息
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.Join(System.String,System.String,MySoft.Data.SQLParameter[])">
            <summary>
            关联表信息
            </summary>
            <param name="tableName"></param>
            <param name="where"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QueryCreator.Join(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            关联表信息
            </summary>
            <param name="table"></param>
            <param name="where"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.Join``1(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            关联表信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QueryCreator.Join``1(MySoft.Data.WhereClip)">
            <summary>
            关联表信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.Join(MySoft.Data.JoinType,System.String,System.String,MySoft.Data.SQLParameter[])">
            <summary>
            关联表信息
            </summary>
            <param name="tableName"></param>
            <param name="where"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QueryCreator.Join(MySoft.Data.JoinType,MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            关联表信息
            </summary>
            <param name="table"></param>
            <param name="where"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.Join``1(MySoft.Data.JoinType,System.String,MySoft.Data.SQLParameter[])">
            <summary>
            关联表信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QueryCreator.Join``1(MySoft.Data.JoinType,MySoft.Data.WhereClip)">
            <summary>
            关联表信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddWhere(MySoft.Data.WhereClip)">
            <summary>
            添加一个条件
            </summary>
            <param name="where"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddWhere(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            添加一个条件
            </summary>
            <param name="where"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddWhere(MySoft.Data.Field,System.Object)">
            <summary>
            添加一个条件
            </summary>
            <param name="field"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddWhere(System.String,System.Object)">
            <summary>
            添加一个条件
            </summary>
            <param name="fieldName"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddWhere(System.String,System.String,System.Object)">
            <summary>
            添加一个条件
            </summary>
            <param name="tableName"></param>
            <param name="fieldName"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddWhere``1(System.String,System.Object)">
            <summary>
            添加一个条件
            </summary>
            <param name="fieldName"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddOrder(MySoft.Data.OrderByClip)">
            <summary>
            添加一个排序
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddOrder(System.String)">
            <summary>
            添加一个排序
            </summary>
            <param name="orderby"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddOrder(MySoft.Data.Field,System.Boolean)">
            <summary>
            增加排序规则
            </summary>
            <param name="field"></param>
            <param name="desc"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddOrder(System.String,System.Boolean)">
            <summary>
            增加排序规则
            </summary>
            <param name="fieldName"></param>
            <param name="desc"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddOrder(System.String,System.String,System.Boolean)">
            <summary>
            增加排序规则
            </summary>
            <param name="tableName"></param>
            <param name="fieldName"></param>
            <param name="desc"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddOrder``1(System.String,System.Boolean)">
            <summary>
            增加排序规则
            </summary>
            <param name="fieldName"></param>
            <param name="desc"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddField(MySoft.Data.Field)">
            <summary>
            添加一个字段
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddField(System.String)">
            <summary>
            添加一个字段
            </summary>
            <param name="fieldName"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddField(System.String,System.String)">
            <summary>
            添加一个字段
            </summary>
            <param name="tableName"></param>
            <param name="fieldName"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddField``1(System.String)">
            <summary>
            添加一个字段
            </summary>
            <param name="fieldName"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.RemoveField(MySoft.Data.Field[])">
            <summary>
            移除指定的列
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QueryCreator.RemoveField(System.String[])">
            <summary>
            移除指定的列
            </summary>
            <param name="fieldNames"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.QueryCreator.Table">
            <summary>
            返回table
            </summary>
        </member>
        <member name="P:MySoft.Data.QueryCreator.Where">
            <summary>
            返回条件
            </summary>
        </member>
        <member name="P:MySoft.Data.QueryCreator.OrderBy">
            <summary>
            返回排序
            </summary>
        </member>
        <member name="P:MySoft.Data.QueryCreator.Fields">
            <summary>
            返回字段列表
            </summary>
        </member>
        <member name="P:MySoft.Data.QueryCreator.IsRelation">
            <summary>
            是否关联查询
            </summary>
        </member>
        <member name="P:MySoft.Data.QueryCreator.Relations">
            <summary>
            获取关联信息
            </summary>
        </member>
        <member name="T:MySoft.Data.InsertCreator">
            <summary>
            插入创建器
            </summary>
        </member>
        <member name="M:MySoft.Data.InsertCreator.NewCreator">
            <summary>
            创建一个新的插入器
            </summary>
        </member>
        <member name="M:MySoft.Data.InsertCreator.NewCreator(System.String)">
            <summary>
            创建一个新的插入器
            </summary>
        </member>
        <member name="M:MySoft.Data.InsertCreator.NewCreator(MySoft.Data.Table)">
            <summary>
            创建一个新的插入器
            </summary>
        </member>
        <member name="M:MySoft.Data.InsertCreator.NewCreator``1">
            <summary>
            创建一个新的插入器
            </summary>
        </member>
        <member name="M:MySoft.Data.InsertCreator.#ctor">
            <summary>
            实例化InsertCreator
            </summary>
        </member>
        <member name="M:MySoft.Data.InsertCreator.#ctor(System.String)">
            <summary>
            实例化InsertCreator
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:MySoft.Data.InsertCreator.#ctor(MySoft.Data.Table)">
            <summary>
            实例化InsertCreator
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:MySoft.Data.InsertCreator.From``1">
            <summary>
            设置表信息
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.InsertCreator.From(System.String)">
            <summary>
            设置表名
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:MySoft.Data.InsertCreator.From(MySoft.Data.Table)">
            <summary>
            设置表信息
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:MySoft.Data.InsertCreator.SetEntity``1(``0)">
            <summary>
            设置实体信息
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.InsertCreator.SetIdentityField(MySoft.Data.Field)">
            <summary>
            设置主键字段
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:MySoft.Data.InsertCreator.SetIdentityField(System.String)">
            <summary>
            设置主键字段
            </summary>
            <param name="fieldName"></param>
        </member>
        <member name="M:MySoft.Data.InsertCreator.AddInsert(MySoft.Data.Field,System.Object)">
            <summary>
            添加一个数据
            </summary>
            <param name="field"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.InsertCreator.AddInsert(System.String,System.Object)">
            <summary>
            添加一个数据
            </summary>
            <param name="fieldName"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.InsertCreator.AddInsert(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            添加一个数据字典
            </summary>
            <param name="dict"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.InsertCreator.AddInsert(System.Collections.Generic.IDictionary{MySoft.Data.Field,System.Object})">
            <summary>
            添加一个数据字典
            </summary>
            <param name="dict"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.InsertCreator.AddInsert(MySoft.Data.Field[],System.Object[])">
            <summary>
            添加多个数据
            </summary>
            <param name="fields"></param>
            <param name="values"></param>
        </member>
        <member name="M:MySoft.Data.InsertCreator.AddInsert(System.String[],System.Object[])">
            <summary>
            添加多个数据
            </summary>
            <param name="fieldNames"></param>
            <param name="values"></param>
        </member>
        <member name="M:MySoft.Data.InsertCreator.RemoveInsert(System.String[])">
            <summary>
            移除指定的列
            </summary>
            <param name="fieldNames"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.InsertCreator.RemoveInsert(MySoft.Data.Field[])">
            <summary>
            移除指定的列
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.InsertCreator.Table">
            <summary>
            返回table
            </summary>
        </member>
        <member name="P:MySoft.Data.InsertCreator.IdentityField">
            <summary>
            返回标识列字段
            </summary>
        </member>
        <member name="P:MySoft.Data.InsertCreator.SequenceName">
            <summary>
            返回自增量名称
            </summary>
        </member>
        <member name="T:MySoft.Data.EntityConfig">
            <summary>
            映像配置类
            </summary>
        </member>
        <member name="M:MySoft.Data.EntityConfig.Refresh">
            <summary>
            刷新配置
            </summary>
        </member>
        <member name="M:MySoft.Data.EntityConfig.GetMappingTable``1(System.String)">
            <summary>
            获取映射的表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.EntityConfig.GetMappingField``1(System.String,System.String)">
            <summary>
            获取映射的字段
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyName"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.GroupByClip">
            <summary>
            
            </summary>
        </member>
        <member name="F:MySoft.Data.GroupByClip.None">
            <summary>
            默认的无分组对象
            </summary>
        </member>
        <member name="M:MySoft.Data.GroupByClip.#ctor">
            <summary>
            自定义一个GroupBy条件
            </summary>
        </member>
        <member name="M:MySoft.Data.GroupByClip.#ctor(System.String)">
            <summary>
            自定义一个GroupBy条件
            </summary>
            <param name="groupBy"></param>
        </member>
        <member name="M:MySoft.Data.GroupByClip.#ctor(MySoft.Data.Field[])">
            <summary>
            自定义一个GroupBy条件
            </summary>
            <param name="fields"></param>
        </member>
        <member name="P:MySoft.Data.GroupByClip.Value">
            <summary>
            GroupBy的值
            </summary>
        </member>
        <member name="M:MySoft.Data.PageSection`1.ToListResult(System.Int32)">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.PageSection`1.ToListResult``1(System.Int32)">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.PageSection`1.ToReader(System.Int32)">
            <summary>
            返回一个DbReader
            </summary>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.PageSection`1.ToTable(System.Int32)">
            <summary>
            返回一个DataTable
            </summary>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.PageSection`1.ToList(System.Int32)">
            <summary>
            返回一个IArrayList
            </summary>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.PageSection`1.PageCount">
            <summary>
            返回页数
            </summary>
        </member>
        <member name="P:MySoft.Data.PageSection`1.RowCount">
            <summary>
            返回记录数
            </summary>
        </member>
        <member name="T:MySoft.Data.ISourceReader">
            <summary>
            读数据接口
            </summary>
        </member>
        <member name="T:MySoft.Data.IRowReader">
            <summary>
            行数据阅读器
            </summary>
        </member>
        <member name="M:MySoft.Data.IRowReader.IsDBNull(System.Int32)">
            <summary>
            判断数据是否为null
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetValue(System.Int32)">
            <summary>
            返回object
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetValue``1(System.Int32)">
            <summary>
            返回指定类型的数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.IsDBNull(System.String)">
            <summary>
            判断数据是否为null
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetValue(System.String)">
            <summary>
            返回object
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetValue``1(System.String)">
            <summary>
            返回指定类型的数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetString(System.String)">
            <summary>
            获取string
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetBytes(System.String)">
            <summary>
            获取byte[]
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetInt16(System.String)">
            <summary>
            获取short
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetInt32(System.String)">
            <summary>
            获取int
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetInt64(System.String)">
            <summary>
            获取long
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetDecimal(System.String)">
            <summary>
            获取decimal
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetDouble(System.String)">
            <summary>
            获取double
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetFloat(System.String)">
            <summary>
            获取float
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetByte(System.String)">
            <summary>
            获取byte
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetBoolean(System.String)">
            <summary>
            获取bool
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetDateTime(System.String)">
            <summary>
            获取DateTime
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetGuid(System.String)">
            <summary>
            获取Guid
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.IsDBNull(MySoft.Data.Field)">
            <summary>
            判断数据是否为null
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetValue(MySoft.Data.Field)">
            <summary>
            返回object
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetValue``1(MySoft.Data.Field)">
            <summary>
            返回指定类型的数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetString(MySoft.Data.Field)">
            <summary>
            获取string
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetBytes(MySoft.Data.Field)">
            <summary>
            获取byte[]
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetInt16(MySoft.Data.Field)">
            <summary>
            获取short
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetInt32(MySoft.Data.Field)">
            <summary>
            获取int
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetInt64(MySoft.Data.Field)">
            <summary>
            获取long
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetDecimal(MySoft.Data.Field)">
            <summary>
            获取decimal
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetDouble(MySoft.Data.Field)">
            <summary>
            获取double
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetFloat(MySoft.Data.Field)">
            <summary>
            获取float
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetByte(MySoft.Data.Field)">
            <summary>
            获取byte
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetBoolean(MySoft.Data.Field)">
            <summary>
            获取bool
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetDateTime(MySoft.Data.Field)">
            <summary>
            获取DateTime
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetGuid(MySoft.Data.Field)">
            <summary>
            获取Guid
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.IRowReader.Item(System.Int32)">
            <summary>
            按索引获取值
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.IRowReader.Item(System.String)">
            <summary>
            按名称获取值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceReader.Close">
            <summary>
            关闭DbReader
            </summary>
        </member>
        <member name="M:MySoft.Data.ISourceReader.Read">
            <summary>
            读取数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceReader.NextResult">
            <summary>
            返回下一结果集
            </summary>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.ISourceReader.FieldCount">
            <summary>
            获取字段数
            </summary>
        </member>
        <member name="T:MySoft.Data.ITableRelation`1">
            <summary>
            表关系类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:MySoft.Data.PageSection">
            <summary>
            分页器
            </summary>
        </member>
        <member name="M:MySoft.Data.PageSection.ToReader(System.Int32)">
            <summary>
            返回ISourceReader
            </summary>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.PageSection.ToList``1(System.Int32)">
            <summary>
            返回IArrayList
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.PageSection.ToTable(System.Int32)">
            <summary>
            返回DataTable
            </summary>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.PageSection.PageCount">
            <summary>
            返回页数
            </summary>
        </member>
        <member name="P:MySoft.Data.PageSection.RowCount">
            <summary>
            返回记录数
            </summary>
        </member>
        <member name="T:MySoft.Data.DbTrans">
            <summary>
            事务处理类
            </summary>
        </member>
        <member name="M:MySoft.Data.DbTrans.#ctor(MySoft.Data.DbProvider,System.Data.Common.DbTransaction)">
            <summary>
            以DbTransaction方式实例化一个事务
            </summary>
            <param name="dbProvider"></param>
            <param name="dbTran"></param>
        </member>
        <member name="M:MySoft.Data.DbTrans.#ctor(MySoft.Data.DbProvider,System.Data.Common.DbConnection)">
            <summary>
            以BbConnection方式实例化一个事务
            </summary>
            <param name="dbProvider"></param>
            <param name="dbConnection"></param>
        </member>
        <member name="M:MySoft.Data.DbTrans.BeginBatch">
            <summary>
            返回一个Batch
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.BeginBatch(System.Int32)">
            <summary>
            返回一个Batch
            </summary>
            <param name="batchSize">Batch大小</param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Save``1(MySoft.Data.Table,``0)">
            <summary>
            保存一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Insert``1(MySoft.Data.Table,MySoft.Data.Field[],System.Object[])">
            <summary>
             插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Insert``2(MySoft.Data.Table,MySoft.Data.Field[],System.Object[],``1@)">
            <summary>
             插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Delete``1(MySoft.Data.Table,``0)">
            <summary>
            删除一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Delete``1(MySoft.Data.Table,System.Object[])">
            <summary>
            删除指定主键的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Save``1(``0)">
            <summary>
            保存一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Insert``1(MySoft.Data.Field[],System.Object[])">
            <summary>
             插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Insert``2(MySoft.Data.Field[],System.Object[],``1@)">
            <summary>
             插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Delete``1(``0)">
            <summary>
            删除一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Delete``1(System.Object[])">
            <summary>
            按主键删除指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.InsertOrUpdate``1(``0,MySoft.Data.Field[])">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.InsertOrUpdate``1(MySoft.Data.FieldValue[],MySoft.Data.WhereClip)">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fvs"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Commit">
            <summary>
            提交事务
            </summary>
        </member>
        <member name="M:MySoft.Data.DbTrans.Rollback">
            <summary>
            回滚事务
            </summary>
        </member>
        <member name="M:MySoft.Data.DbTrans.Dispose">
            <summary>
            Dispose事务
            </summary>
        </member>
        <member name="M:MySoft.Data.DbTrans.Close">
            <summary>
            关闭事务
            </summary>
        </member>
        <member name="M:MySoft.Data.DbTrans.Single``1(MySoft.Data.Table,System.Object[])">
            <summary>
            按主键获取一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Single``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            按条件获取一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Exists``1(MySoft.Data.Table,``0)">
            <summary>
            是否存在指定的实体，按主键匹配
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Exists``1(MySoft.Data.Table,System.Object[])">
            <summary>
            是否存在指定主键的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Exists``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            是否存在指定条件的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Count``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            按条件获取记录条数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Sum``1(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Sum操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Avg``1(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Avg操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Max``1(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Max操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Min``1(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Min操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Sum``2(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Sum操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Avg``2(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Avg操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Max``2(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Max操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Min``2(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Min操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Single``1(System.Object[])">
            <summary>
            按主键获取一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Single``1(MySoft.Data.WhereClip)">
            <summary>
            按条件获取一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Exists``1(``0)">
            <summary>
            是否存在指定的实体，按主键匹配
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Exists``1(System.Object[])">
            <summary>
            是否存在指定主键的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Exists``1(MySoft.Data.WhereClip)">
            <summary>
            是否存在指定条件的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Count``1(MySoft.Data.WhereClip)">
            <summary>
            按条件获取记录条数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Sum``1(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Sum操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Avg``1(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Avg操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Max``1(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Max操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Min``1(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Min操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Sum``2(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Sum操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Avg``2(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Avg操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Max``2(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Max操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Min``2(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Min操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.From``1">
            <summary>
            返回一个From节
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.From``1(MySoft.Data.TableRelation{``0})">
            <summary>
            返回一个From节
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Query``2">
            <summary>
            返回一个查询
            </summary>
            <typeparam name="TResult"></typeparam>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.From``1(MySoft.Data.Table)">
            <summary>
            返回一个From节
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.From``1(System.String)">
            <summary>
            返回一个From节，并可指定其别名
            </summary>
            <typeparam name="T"></typeparam>
            <param name="aliasName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.FromSql(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            返回一个Sql节
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.FromProc(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            返回一个Proc节
            </summary>
            <param name="procName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.FromSql(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            返回一个Sql节
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.FromProc(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            返回一个Proc节
            </summary>
            <param name="procName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Excute(MySoft.Data.InsertCreator)">
            <summary>
            插入数据
            </summary>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Excute``1(MySoft.Data.InsertCreator,``0@)">
            <summary>
             插入数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="creator"></param>
            <param name="identityValue"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Excute(MySoft.Data.DeleteCreator)">
            <summary>
            按条件删除指定记录
            </summary>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Excute(MySoft.Data.UpdateCreator)">
            <summary>
            更新数据
            </summary>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.From(MySoft.Data.QueryCreator)">
            <summary>
            返回一个Query节
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Delete``1(MySoft.Data.WhereClip)">
            <summary>
            按条件删除指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Update``1(MySoft.Data.Field,System.Object,MySoft.Data.WhereClip)">
            <summary>
            按条件更新指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Update``1(MySoft.Data.Field[],System.Object[],MySoft.Data.WhereClip)">
            <summary>
            按条件更新指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Delete``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            按条件删除指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.InsertOrUpdate``1(MySoft.Data.Table,``0,MySoft.Data.Field[])">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.InsertOrUpdate``1(MySoft.Data.Table,MySoft.Data.FieldValue[],MySoft.Data.WhereClip)">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fvs"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Update``1(MySoft.Data.Table,MySoft.Data.Field,System.Object,MySoft.Data.WhereClip)">
            <summary>
            按条件更新指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Update``1(MySoft.Data.Table,MySoft.Data.Field[],System.Object[],MySoft.Data.WhereClip)">
            <summary>
            按条件更新指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Insert``1(MySoft.Data.FieldValue[])">
            <summary>
            插入数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fvs"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Insert``2(MySoft.Data.FieldValue[],``1@)">
            <summary>
            插入数据
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="fvs"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Update``1(MySoft.Data.FieldValue,MySoft.Data.WhereClip)">
            <summary>
            更新数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fv"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Update``1(MySoft.Data.FieldValue[],MySoft.Data.WhereClip)">
            <summary>
            更新数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fvs"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Insert``1(MySoft.Data.Table,MySoft.Data.FieldValue[])">
            <summary>
            插入数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="table"></param>
            <param name="fvs"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Insert``2(MySoft.Data.Table,MySoft.Data.FieldValue[],``1@)">
            <summary>
            插入数据
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="table"></param>
            <param name="fvs"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Update``1(MySoft.Data.Table,MySoft.Data.FieldValue,MySoft.Data.WhereClip)">
            <summary>
            更新数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="table"></param>
            <param name="fv"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Update``1(MySoft.Data.Table,MySoft.Data.FieldValue[],MySoft.Data.WhereClip)">
            <summary>
            更新数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="table"></param>
            <param name="fvs"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Insert``2(``0,``1@,MySoft.Data.FieldValue[])">
            <summary>
            插入实体
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="entity"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Insert``2(MySoft.Data.Table,``0,``1@,MySoft.Data.FieldValue[])">
            <summary>
            插入实体
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="table"></param>
            <param name="entity"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.OrderByClip">
            <summary>
            排序构造器
            </summary>
        </member>
        <member name="F:MySoft.Data.OrderByClip.None">
            <summary>
            默认的无排序对象
            </summary>
        </member>
        <member name="M:MySoft.Data.OrderByClip.#ctor">
            <summary>
            自定义一个OrderBy条件
            </summary>
        </member>
        <member name="M:MySoft.Data.OrderByClip.#ctor(System.String)">
            <summary>
            自定义一个OrderBy条件
            </summary>
            <param name="orderBy"></param>
        </member>
        <member name="P:MySoft.Data.OrderByClip.Value">
            <summary>
            OrderBy的值
            </summary>
        </member>
        <member name="T:MySoft.Data.Field`1">
            <summary>
            用于实体内的Field操作
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:MySoft.Data.Field">
            <summary>
            用于实体内的Field操作
            </summary>
        </member>
        <member name="T:MySoft.Data.Design.IField">
            <summary>
            
            </summary>
        </member>
        <member name="F:MySoft.Data.Field.All">
            <summary>
            字段*
            </summary>
        </member>
        <member name="M:MySoft.Data.Field.Set(System.Object)">
            <summary>
            创建一个FieldValue
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Set(MySoft.Data.DbValue)">
            <summary>
            创建一个FieldValue
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Set(MySoft.Data.Field)">
            <summary>
            创建一个FieldValue
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Create(System.String,MySoft.Data.QueryCreator)">
            <summary>
            创建一个内联字段
            </summary>
            <param name="fieldName"></param>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Create``1(System.String,MySoft.Data.QuerySection{``0})">
            <summary>
            创建一个内联字段
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fieldName"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Create``1(System.String,MySoft.Data.TableRelation{``0})">
            <summary>
            创建一个内联字段
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fieldName"></param>
            <param name="relation"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.#ctor(System.String)">
            <summary>
            实例化Field
            </summary>
            <param name="fieldName"></param>
        </member>
        <member name="M:MySoft.Data.Field.#ctor(System.String,System.String)">
            <summary>
            实例化Field
            </summary>
            <param name="tableName"></param>
            <param name="fieldName"></param>
        </member>
        <member name="M:MySoft.Data.Field.#ctor(System.String,System.String,System.String)">
            <summary>
            实例化Field
            </summary>
            <param name="propertyName"></param>
            <param name="tableName"></param>
            <param name="fieldName"></param>
        </member>
        <member name="M:MySoft.Data.Field.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            实例化Field
            </summary>
            <param name="propertyName"></param>
            <param name="tableName"></param>
            <param name="fieldName"></param>
            <param name="aliasName"></param>
        </member>
        <member name="M:MySoft.Data.Field.Distinct">
            <summary>
            对字段进行Distinct操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Count">
            <summary>
            对字段进行Count操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Sum">
            <summary>
            对字段进行Sum操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Avg">
            <summary>
            对字段进行Avg操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Max">
            <summary>
            对字段进行Max操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Min">
            <summary>
            对字段进行Min操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.As(System.String)">
            <summary>
            更改字段的别名
            </summary>
            <param name="aliasName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.At(System.String)">
            <summary>
            更改字段所在表
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.At(MySoft.Data.Table)">
            <summary>
            更改字段所在表
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Func(System.String,System.String[])">
            <summary>
            函数处理
            </summary>
            <param name="funName"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Func(System.Int32,System.String,System.String[])">
            <summary>
            函数处理
            </summary>
            <param name="findex"></param>
            <param name="funName"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.IsNull">
            <summary>
            返回一个值为null的条件
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Contains(System.String)">
            <summary>
            指定value进行模糊查询
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Like(System.String)">
            <summary>
            指定value进行Like查询
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.StartsWith(System.String)">
            <summary>
            指定value进行Like查询
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.EndsWith(System.String)">
            <summary>
            指定value进行Like查询
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Between(System.Object,System.Object)">
            <summary>
            进行Between操作
            </summary>
            <param name="leftValue"></param>
            <param name="rightValue"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.In``1(MySoft.Data.Field)">
            <summary>
            进行In子查询操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.In``1(MySoft.Data.Table,MySoft.Data.Field)">
            <summary>
            进行In子查询操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.In``1(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            进行In子查询操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.In``1(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            进行In子查询操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.In``1(MySoft.Data.QuerySection{``0})">
            <summary>
            进行In操作,query为一个子查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.In``1(MySoft.Data.TopSection{``0})">
            <summary>
            进行In操作,query为一个子查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="top"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.In``1(MySoft.Data.TableRelation{``0})">
            <summary>
            进行In操作,relation为一个关联查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="relation"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.In(System.Object[])">
            <summary>
            进行In子查询操作
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.In(MySoft.Data.QueryCreator)">
            <summary>
            进行In子查询操作
            </summary>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.CreateWhereClip(MySoft.Data.Field,System.String,System.Object)">
            <summary>
            创建一个参数方式的WhereClip
            </summary>
            <param name="field"></param>
            <param name="join"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.Field.Name">
            <summary>
            获取真实字段名
            </summary>
        </member>
        <member name="P:MySoft.Data.Field.OriginalName">
            <summary>
            获取原始的字段名
            </summary>
        </member>
        <member name="P:MySoft.Data.Field.PropertyName">
            <summary>
            属性名称
            </summary>
        </member>
        <member name="T:MySoft.Data.Design.MappingAttribute">
            <summary>
            字段映射的名称
            </summary>
        </member>
        <member name="T:MySoft.Data.RelationEntity`1">
            <summary>
            关系实体
            </summary>
        </member>
        <member name="M:MySoft.Data.RelationEntity`1.GetRelation">
            <summary>
            返回表关系
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.SqlServer9.SqlServer9Provider">
            <summary>
            SQL Server 2005 驱动
            </summary>
        </member>
        <member name="T:MySoft.Data.SqlServer.SqlServerProvider">
            <summary>
            SQL Server 2000 驱动
            </summary>
        </member>
        <member name="M:MySoft.Data.SqlServer.SqlServerProvider.GetParameterType(System.Data.Common.DbParameter)">
            <summary>
            获取参数类型
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlServer.SqlServerProvider.CreateParameter(System.String,System.Object)">
            <summary>
            创建DbParameter
            </summary>
            <param name="parameterName"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlServer.SqlServerProvider.PrepareParameter(System.Data.Common.DbCommand)">
            <summary>
            调整DbCommand
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.SqlServer.SqlServerProvider.SupportBatch">
            <summary>
            是否支持批处理
            </summary>
        </member>
        <member name="P:MySoft.Data.SqlServer.SqlServerProvider.AutoIncrementValue">
            <summary>
            返回自动ID的sql语句
            </summary>
        </member>
        <member name="M:MySoft.Data.SqlServer9.SqlServer9Provider.CreatePageQuery``1(MySoft.Data.QuerySection{``0},System.Int32,System.Int32)">
            <summary>
            创建分页查询
            </summary>
            <param name="query"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.ISourceTable">
            <summary>
            数据源接口
            </summary>
        </member>
        <member name="M:MySoft.Data.ISourceTable.Select(System.String[])">
            <summary>
            选择某些列
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceTable.Filter(System.String)">
            <summary>
            过虑数据
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceTable.Sort(System.String)">
            <summary>
            排序数据
            </summary>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceTable.Add(System.String,System.Type)">
            <summary>
            添加列
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceTable.Add(System.String,System.Type,System.String)">
            <summary>
            添加列
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceTable.SetOrdinal(System.String,System.Int32)">
            <summary>
            设置列的顺序
            </summary>
            <param name="name"></param>
            <param name="index"></param>
        </member>
        <member name="M:MySoft.Data.ISourceTable.Rename(System.String,System.String)">
            <summary>
            字段更名
            </summary>
            <param name="oldname"></param>
            <param name="newname"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceTable.Revalue``1(System.String,System.String,MySoft.Data.ReturnValue{``0})">
            <summary>
            按要求改变某列值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="readName"></param>
            <param name="changeName"></param>
            <param name="revalue"></param>
        </member>
        <member name="M:MySoft.Data.ISourceTable.Remove(System.String[])">
            <summary>
            移除指定的列
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceTable.Fill(MySoft.Data.FillRelation,System.String[])">
            <summary>
            将另一个表中的某字段值按字段关联后进行填充
            </summary>
            <param name="relation"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.ISourceTable.RowCount">
            <summary>
            获取数据行数
            </summary>
        </member>
        <member name="P:MySoft.Data.ISourceTable.ColumnCount">
            <summary>
            获取数据列数
            </summary>
        </member>
        <member name="P:MySoft.Data.ISourceTable.Item(System.Int32)">
            <summary>
            获取行
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.UpdateCreator">
            <summary>
            更新创建器
            </summary>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.NewCreator">
            <summary>
            创建一个新的更新器
            </summary>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.NewCreator(System.String)">
            <summary>
            创建一个新的更新器
            </summary>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.NewCreator(MySoft.Data.Table)">
            <summary>
            创建一个新的更新器
            </summary>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.NewCreator``1">
            <summary>
            创建一个新的更新器
            </summary>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.#ctor">
            <summary>
            实例化UpdateCreator
            </summary>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.#ctor(System.String)">
            <summary>
            实例化UpdateCreator
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.#ctor(MySoft.Data.Table)">
            <summary>
            实例化UpdateCreator
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.From``1">
            <summary>
            设置表信息
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.From(System.String)">
            <summary>
            设置表名
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.From(MySoft.Data.Table)">
            <summary>
            设置表信息
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.SetEntity``1(``0,System.Boolean)">
            <summary>
            设置表和实体信息
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.AddWhere(MySoft.Data.WhereClip)">
            <summary>
            添加一个条件
            </summary>
            <param name="where"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.AddWhere(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            添加一个条件
            </summary>
            <param name="where"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.AddWhere(MySoft.Data.Field,System.Object)">
            <summary>
            添加一个条件
            </summary>
            <param name="field"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.AddWhere(System.String,System.Object)">
            <summary>
            添加一个条件
            </summary>
            <param name="fieldName"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.AddUpdate(MySoft.Data.Field,System.Object)">
            <summary>
            添加一个数据
            </summary>
            <param name="field"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.AddUpdate(System.String,System.Object)">
            <summary>
            添加一个数据
            </summary>
            <param name="fieldName"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.AddUpdate(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            添加一个数据字典
            </summary>
            <param name="dict"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.AddUpdate(System.Collections.Generic.IDictionary{MySoft.Data.Field,System.Object})">
            <summary>
            添加一个数据字典
            </summary>
            <param name="dict"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.AddUpdate(MySoft.Data.Field[],System.Object[])">
            <summary>
            添加一个数据
            </summary>
            <param name="fields"></param>
            <param name="values"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.AddUpdate(System.String[],System.Object[])">
            <summary>
            添加一个数据
            </summary>
            <param name="fieldNames"></param>
            <param name="values"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.RemoveUpdate(System.String[])">
            <summary>
            移除指定的列
            </summary>
            <param name="fieldNames"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.RemoveUpdate(MySoft.Data.Field[])">
            <summary>
            移除指定的列
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.UpdateCreator.Table">
            <summary>
            返回table
            </summary>
        </member>
        <member name="P:MySoft.Data.UpdateCreator.Where">
            <summary>
            返回条件
            </summary>
        </member>
        <member name="T:MySoft.Data.SourceReader">
            <summary>
            自定义数据记录
            </summary>
        </member>
        <member name="M:MySoft.Data.SourceReader.#ctor(System.Data.IDataReader)">
            <summary>
            初始化DbReader
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:MySoft.Data.SourceReader.Read">
            <summary>
            读取下一条数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.NextResult">
            <summary>
            返回下一结果集
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.Close">
            <summary>
            关闭DbReader
            </summary>
        </member>
        <member name="M:MySoft.Data.SourceReader.IsDBNull(System.Int32)">
            <summary>
            判断数据是否为null
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetValue(System.Int32)">
            <summary>
            返回object
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetValue``1(System.Int32)">
            <summary>
            返回指定类型的数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.IsDBNull(System.String)">
            <summary>
            判断数据是否为null
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetValue(System.String)">
            <summary>
            返回object
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetValue``1(System.String)">
            <summary>
            返回指定类型的数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetString(System.String)">
            <summary>
            获取string
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetBytes(System.String)">
            <summary>
            获取byte[]
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetInt16(System.String)">
            <summary>
            获取short
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetInt32(System.String)">
            <summary>
            获取int
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetInt64(System.String)">
            <summary>
            获取long
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetDecimal(System.String)">
            <summary>
            获取decimal
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetDouble(System.String)">
            <summary>
            获取double
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetFloat(System.String)">
            <summary>
            获取float
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetByte(System.String)">
            <summary>
            获取byte
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetBoolean(System.String)">
            <summary>
            获取bool
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetDateTime(System.String)">
            <summary>
            获取DateTime
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetGuid(System.String)">
            <summary>
            获取Guid
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.IsDBNull(MySoft.Data.Field)">
            <summary>
            判断数据是否为null
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetValue(MySoft.Data.Field)">
            <summary>
            返回object
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetValue``1(MySoft.Data.Field)">
            <summary>
            返回指定类型的数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetString(MySoft.Data.Field)">
            <summary>
            获取string
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetBytes(MySoft.Data.Field)">
            <summary>
            获取byte[]
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetInt16(MySoft.Data.Field)">
            <summary>
            获取short
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetInt32(MySoft.Data.Field)">
            <summary>
            获取int
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetInt64(MySoft.Data.Field)">
            <summary>
            获取long
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetDecimal(MySoft.Data.Field)">
            <summary>
            获取decimal
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetDouble(MySoft.Data.Field)">
            <summary>
            获取double
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetFloat(MySoft.Data.Field)">
            <summary>
            获取float
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetByte(MySoft.Data.Field)">
            <summary>
            获取byte
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetBoolean(MySoft.Data.Field)">
            <summary>
            获取bool
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetDateTime(MySoft.Data.Field)">
            <summary>
            获取DateTime
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetGuid(MySoft.Data.Field)">
            <summary>
            获取Guid
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.ConvertTo``1">
            <summary>
            返回指定类型的List
            </summary>
            <typeparam name="TOutput"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.ConvertTo``2">
            <summary>
            返回另一类型的列表(输入为类、输出为接口，用于实体的解耦)
            </summary>
            <typeparam name="TOutput"></typeparam>
            <typeparam name="IOutput"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.ConvertAll``1(System.Converter{MySoft.Data.IRowReader,``0})">
            <summary>
            通过委托来创建实体
            </summary>
            <typeparam name="TOutput"></typeparam>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.SourceReader.FieldCount">
            <summary>
            获取字段数
            </summary>
        </member>
        <member name="P:MySoft.Data.SourceReader.OriginalData">
            <summary>
            获取当前DataSource
            </summary>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.SourceReader.Item(System.Int32)">
            <summary>
            按索引获取值
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.SourceReader.Item(System.String)">
            <summary>
            按名称获取值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.Design.DescriptionAttribute">
            <summary>
            字段描述信息
            </summary>
        </member>
        <member name="T:MySoft.Data.TableRelation`1">
            <summary>
            关系表，可以用来存储关联信息
            </summary>
        </member>
        <member name="M:MySoft.Data.TableRelation`1.LeftJoin``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            左关联
            </summary>
            <param name="table"></param>
            <param name="onWhere"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TableRelation`1.RightJoin``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            右关联
            </summary>
            <param name="table"></param>
            <param name="onWhere"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TableRelation`1.InnerJoin``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            内关联
            </summary>
            <param name="table"></param>
            <param name="onWhere"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TableRelation`1.LeftJoin``1(MySoft.Data.WhereClip)">
            <summary>
            左关联
            </summary>
            <param name="table"></param>
            <param name="onWhere"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TableRelation`1.RightJoin``1(MySoft.Data.WhereClip)">
            <summary>
            右关联
            </summary>
            <param name="table"></param>
            <param name="onWhere"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TableRelation`1.InnerJoin``1(MySoft.Data.WhereClip)">
            <summary>
            内关联
            </summary>
            <param name="table"></param>
            <param name="onWhere"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TableRelation`1.LeftJoin``1(System.String,MySoft.Data.WhereClip)">
            <summary>
            左关联
            </summary>
            <param name="table"></param>
            <param name="onWhere"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TableRelation`1.RightJoin``1(System.String,MySoft.Data.WhereClip)">
            <summary>
            右关联
            </summary>
            <param name="table"></param>
            <param name="onWhere"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TableRelation`1.InnerJoin``1(System.String,MySoft.Data.WhereClip)">
            <summary>
            内关联
            </summary>
            <param name="table"></param>
            <param name="onWhere"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TableRelation`1.SubQuery">
            <summary>
            生成一个子查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TableRelation`1.SubQuery(System.String)">
            <summary>
            生成一个子查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TableRelation`1.SubQuery``1">
            <summary>
            生成一个子查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TableRelation`1.SubQuery``1(System.String)">
            <summary>
            生成一个带别名的子查询
            </summary>
            <param name="aliasName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TableRelation`1.Where(MySoft.Data.WhereClip)">
            <summary>
            进行条件操作
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TableRelation`1.OrderBy(MySoft.Data.OrderByClip)">
            <summary>
            进行排序操作
            </summary>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TableRelation`1.GroupBy(MySoft.Data.GroupByClip)">
            <summary>
            进行分组操作
            </summary>
            <param name="groupBy"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TableRelation`1.Select(MySoft.Data.Field[])">
            <summary>
            进行查询操作
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.DbField">
            <summary>
            数据库字段
            </summary>
        </member>
        <member name="P:MySoft.Data.DbField.Name">
            <summary>
            返回原始字段名称
            </summary>
        </member>
        <member name="M:MySoft.Data.IProvider.SetDbProvider(MySoft.Data.DbProvider,MySoft.Data.DbTrans)">
            <summary>
            设置驱动
            </summary>
            <param name="dbProvider"></param>
            <param name="dbTran"></param>
        </member>
        <member name="T:MySoft.Data.CustomField">
            <summary>
            系统字段
            </summary>
        </member>
        <member name="M:MySoft.Data.CustomField.MySoft#Data#IProvider#SetDbProvider(MySoft.Data.DbProvider,MySoft.Data.DbTrans)">
            <summary>
            处理qString;
            </summary>
            <param name="dbProvider"></param>
            <param name="dbTran"></param>
        </member>
        <member name="P:MySoft.Data.CustomField.Name">
            <summary>
            重载名称
            </summary>
        </member>
        <member name="T:MySoft.Data.CustomField`1">
            <summary>
            系统字段
            </summary>
        </member>
        <member name="M:MySoft.Data.CustomField`1.MySoft#Data#IProvider#SetDbProvider(MySoft.Data.DbProvider,MySoft.Data.DbTrans)">
            <summary>
            处理qString;
            </summary>
            <param name="dbProvider"></param>
            <param name="dbTran"></param>
        </member>
        <member name="P:MySoft.Data.CustomField`1.Name">
            <summary>
            重载名称
            </summary>
        </member>
        <member name="T:MySoft.Data.DataHelper">
            <summary>
            数据服务类
            </summary>
        </member>
        <member name="M:MySoft.Data.DataHelper.CloneObject``1(``0)">
            <summary>
            克隆对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataHelper.ConvertType``2(``0)">
            <summary>
            从对象obj中获取值传给当前实体,TOutput必须为class或接口
            TInput可以为class、NameValueCollection、IDictionary、IRowReader、DataRow
            </summary>
            <typeparam name="TInput"></typeparam>
            <typeparam name="TOutput"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataHelper.IsNullOrEmpty(MySoft.Data.WhereClip)">
            <summary>
            判断WhereClip是否为null或空
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataHelper.IsNullOrEmpty(MySoft.Data.OrderByClip)">
            <summary>
            判断OrderByClip是否为null或空
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataHelper.IsNullOrEmpty(MySoft.Data.GroupByClip)">
            <summary>
            判断GroupByClip是否为null或空
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataHelper.FormatValue(System.Object)">
            <summary>
            格式化数据为数据库通用格式
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataHelper.CreateFieldValue(MySoft.Data.Field[],System.Object[],System.Boolean)">
            <summary>
            创建一个FieldValue列表
            </summary>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.Design.PrimaryKeyAttribute">
            <summary>
            表示主键
            </summary>
        </member>
        <member name="T:MySoft.Data.Design.SequenceAttribute">
            <summary>
            定义自增长列
            </summary>
        </member>
        <member name="T:MySoft.Data.WhereClip">
            <summary>
            条件构造器
            </summary>
        </member>
        <member name="F:MySoft.Data.WhereClip.None">
            <summary>
            默认的无条件对象
            </summary>
        </member>
        <member name="M:MySoft.Data.WhereClip.#ctor">
            <summary>
            自定义一个Where条件
            </summary>
        </member>
        <member name="M:MySoft.Data.WhereClip.#ctor(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            自定义一个Where条件
            </summary>
            <param name="where"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:MySoft.Data.WhereClip.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            自定义一个Where条件
            </summary>
            <param name="where"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:MySoft.Data.WhereClip.op_True(MySoft.Data.WhereClip)">
            <summary>
            
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.WhereClip.op_False(MySoft.Data.WhereClip)">
            <summary>
            
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.WhereClip.op_LogicalNot(MySoft.Data.WhereClip)">
            <summary>
            非
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.WhereClip.op_BitwiseAnd(MySoft.Data.WhereClip,MySoft.Data.WhereClip)">
            <summary>
            与
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.WhereClip.op_BitwiseOr(MySoft.Data.WhereClip,MySoft.Data.WhereClip)">
            <summary>
            或者
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.WhereClip.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.WhereClip.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.WhereClip.Value">
            <summary>
            Where的值
            </summary>
        </member>
        <member name="P:MySoft.Data.WhereClip.Parameters">
            <summary>
            返回参数列表
            </summary>
        </member>
        <member name="T:MySoft.Data.ArrayList`1">
            <summary>
            数组列表
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MySoft.Data.ArrayList`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            实例化ArrayList
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:MySoft.Data.ArrayList`1.ToDictionary``1(System.String)">
            <summary>
            返回字典
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ArrayList`1.ToDictionary``1(MySoft.Data.Field)">
            <summary>
            返回字典
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ArrayList`1.Dispose">
            <summary>
            清理资源
            </summary>
        </member>
        <member name="P:MySoft.Data.ArrayList`1.Item(System.Int32)">
            <summary>
            获取当前索引的对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.ArrayList`1.OriginalData">
            <summary>
            获取当前DataSource
            </summary>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.SourceList`1">
            <summary>
            数组列表
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MySoft.Data.SourceList`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            实例化SourceList
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:MySoft.Data.SourceList`1.ToTable">
            <summary>
            转换成SourceTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceList`1.ConvertTo``1">
            <summary>
            返回另一类型的列表(用于实体的解耦))
            </summary>
            <typeparam name="TOutput"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceList`1.FindAll(System.Predicate{`0})">
            <summary>
            查找符合条件的对象
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceList`1.GetRange(System.Int32,System.Int32)">
            <summary>
            返回指定数据条数
            </summary>
            <param name="index"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceList`1.ConvertAll``1(System.Converter{`0,``0})">
            <summary>
            将当前类型转成另一种类型
            </summary>
            <typeparam name="TOutput"></typeparam>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceList`1.ConvertTo``2">
            <summary>
            返回另一类型的列表(输入为类、输出为接口，用于实体的解耦)
            </summary>
            <typeparam name="TOutput"></typeparam>
            <typeparam name="IOutput"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceList`1.ToDictionary``1(MySoft.Data.Field)">
            <summary>
            返回字典
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="groupField"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceList`1.ToDictionary``1(System.String)">
            <summary>
            返回字典
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceList`1.GetDataTable(System.Type)">
            <summary>
             转换成DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.JoinType">
            <summary>
            连接类型
            </summary>
        </member>
        <member name="F:MySoft.Data.JoinType.LeftJoin">
            <summary>
            左链接
            </summary>
        </member>
        <member name="F:MySoft.Data.JoinType.RightJoin">
            <summary>
            右链接
            </summary>
        </member>
        <member name="F:MySoft.Data.JoinType.InnerJoin">
            <summary>
            内部链接
            </summary>
        </member>
        <member name="T:MySoft.Data.SqlSection">
            <summary>
            sql语句操作实现类
            </summary>
        </member>
        <member name="M:MySoft.Data.SqlSection.AddParameters(System.Data.Common.DbParameter[])">
            <summary>
            增加多个参数到当前Sql命令
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.AddParameters(MySoft.Data.SQLParameter[])">
            <summary>
            增加多个参数到当前Sql命令
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.AddParameters(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            增加多个参数到当前Sql命令
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.AddInputParameter(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            增加一个输入参数到当前Sql命令
            </summary>
            <param name="paramName"></param>
            <param name="dbType"></param>
            <param name="size"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.AddInputParameter(System.String,System.Data.DbType,System.Object)">
            <summary>
            增加一个输入参数到当前Sql命令
            </summary>
            <param name="paramName"></param>
            <param name="dbType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.Execute">
            <summary>
            执行当前Sql命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.ToSingle``1">
            <summary>
            执行当前Sql命令并返回一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.ToList``1">
            <summary>
            执行当前Sql命令并返回一个List列表
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.ToListResult``1">
            <summary>
            执行当前Proc并返回一个列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.ToReader">
            <summary>
            执行当前Sql命令并返回一个DbReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.ToTable">
            <summary>
            执行当前Sql命令并返回一个DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.ToDataSet">
            <summary>
            执行当前Sql命令并返回一个DataSet
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.ToScalar">
            <summary>
            执行当前Sql命令并返回一个值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.ToScalar``1">
            <summary>
            执行当前
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.DbProviderType">
            <summary>
            驱动类型
            </summary>
        </member>
        <member name="F:MySoft.Data.DbProviderType.Access">
            <summary>
            Access数据库
            </summary>
        </member>
        <member name="F:MySoft.Data.DbProviderType.SqlServer">
            <summary>
            SqlServer2000数据库
            </summary>
        </member>
        <member name="F:MySoft.Data.DbProviderType.SqlServer9">
            <summary>
            SqlServer2005数据库
            </summary>
        </member>
        <member name="F:MySoft.Data.DbProviderType.Oracle">
            <summary>
            Oracle数据库
            </summary>
        </member>
        <member name="F:MySoft.Data.DbProviderType.MySql">
            <summary>
            MySql数据库
            </summary>
        </member>
        <member name="F:MySoft.Data.DbProviderType.SQLite">
            <summary>
            SQLite数据库
            </summary>
        </member>
        <member name="F:MySoft.Data.DbProviderType.FireBird">
            <summary>
            FireBird数据库
            </summary>
        </member>
        <member name="F:MySoft.Data.DbProviderType.PostgreSQL">
            <summary>
            PostgreSQL数据库
            </summary>
        </member>
        <member name="T:MySoft.Data.DbProviderFactory">
            <summary>
            The db provider factory.
            </summary>
        </member>
        <member name="M:MySoft.Data.DbProviderFactory.CreateDbProvider(MySoft.Data.DbProviderType,System.String)">
            <summary>
            Creates the db provider.
            </summary>
            <param name="connectionString">Name of the conn STR.</param>
            <returns>The db provider.</returns>
        </member>
        <member name="M:MySoft.Data.DbProviderFactory.CreateDbProvider(System.String,System.String,System.String)">
            <summary>
            Creates the db provider.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="className">Name of the class.</param>
            <param name="connectionString">The conn STR.</param>
            <returns>The db provider.</returns>
        </member>
        <member name="M:MySoft.Data.DbProviderFactory.CreateDbProvider(System.String)">
            <summary>
            Creates the db provider.
            </summary>
            <param name="connectName">Name of the conn STR.</param>
            <returns>The db provider.</returns>
        </member>
        <member name="M:MySoft.Data.DbProviderFactory.CreateDbProvider(System.String,MySoft.Data.DbProviderType)">
            <summary>
            Creates the db provider.
            </summary>
            <param name="connStrName">Name of the conn STR.</param>
            <returns>The db provider.</returns>
        </member>
        <member name="P:MySoft.Data.DbProviderFactory.Default">
            <summary>
            Gets the default db provider.
            </summary>
            <value>The default.</value>
        </member>
        <member name="T:MySoft.Data.DeleteCreator">
            <summary>
            删除创建器
            </summary>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.NewCreator">
            <summary>
            创建一个新的删除器
            </summary>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.NewCreator(System.String)">
            <summary>
            创建一个新的删除器
            </summary>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.NewCreator(MySoft.Data.Table)">
            <summary>
            创建一个新的删除器
            </summary>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.NewCreator``1">
            <summary>
            创建一个新的删除器
            </summary>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.#ctor">
            <summary>
            实例化DeleteCreator
            </summary>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.#ctor(System.String)">
            <summary>
            实例化DeleteCreator
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.#ctor(MySoft.Data.Table)">
            <summary>
            实例化DeleteCreator
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.From``1">
            <summary>
            设置表信息
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.From(System.String)">
            <summary>
            设置表名
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.From(MySoft.Data.Table)">
            <summary>
            设置表信息
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.AddWhere(MySoft.Data.WhereClip)">
            <summary>
            添加一个条件
            </summary>
            <param name="where"></param>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.AddWhere(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            添加一个条件
            </summary>
            <param name="where"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.AddWhere(MySoft.Data.Field,System.Object)">
            <summary>
            添加一个条件
            </summary>
            <param name="field"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.AddWhere(System.String,System.Object)">
            <summary>
            添加一个条件
            </summary>
            <param name="fieldName"></param>
            <param name="value"></param>
        </member>
        <member name="P:MySoft.Data.DeleteCreator.Table">
            <summary>
            返回table
            </summary>
        </member>
        <member name="P:MySoft.Data.DeleteCreator.Where">
            <summary>
            返回条件
            </summary>
        </member>
        <member name="T:MySoft.Data.IExcutingLog">
            <summary>
            执行并输出日志的接口
            </summary>
        </member>
        <member name="M:MySoft.Data.IExcutingLog.StartExcute(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            开始执行命令，返回是否需要执行
            </summary>
            <param name="cmdText"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:MySoft.Data.IExcutingLog.EndExcute(System.String,MySoft.Data.SQLParameter[],System.Object,System.Int32)">
            <summary>
            结束执行命令
            </summary>
            <param name="cmdText"></param>
            <param name="parameter"></param>
            <param name="result"></param>
            <param name="elapsedTime"></param>
        </member>
        <member name="T:MySoft.Data.DataException">
            <summary>
            Data异常
            </summary>
        </member>
        <member name="M:MySoft.Data.DataException.#ctor(System.String)">
            <summary>
            普通异常的构造方法
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:MySoft.Data.DataException.#ctor(System.String,System.Exception)">
            <summary>
            内嵌异常的构造方法
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="T:MySoft.Data.Design.ReadOnlyAttribute">
            <summary>
            表示只读，一般用于视图
            </summary>
        </member>
        <member name="T:MySoft.Data.FieldValueCollection`1">
            <summary>
            FieldValue集合
            </summary>
        </member>
        <member name="M:MySoft.Data.FieldValueCollection`1.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            实例化FieldValueCollection
            </summary>
            <param name="dictValues"></param>
        </member>
        <member name="M:MySoft.Data.FieldValueCollection`1.#ctor(System.Collections.Generic.IDictionary{MySoft.Data.Field,System.Object})">
            <summary>
            实例化FieldValueCollection
            </summary>
            <param name="dictValues"></param>
        </member>
        <member name="M:MySoft.Data.FieldValueCollection`1.ToList">
            <summary>
            返回列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.FieldValue">
            <summary>
            字段及值
            </summary>
        </member>
        <member name="M:MySoft.Data.FieldValue.#ctor(MySoft.Data.Field,System.Object)">
            <summary>
            实例化FieldValue
            </summary>
            <param name="field"></param>
            <param name="value"></param>
        </member>
        <member name="P:MySoft.Data.FieldValue.Field">
            <summary>
            字段
            </summary>
        </member>
        <member name="P:MySoft.Data.FieldValue.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:MySoft.Data.FieldValue.IsIdentity">
            <summary>
            是否标识列
            </summary>
        </member>
        <member name="P:MySoft.Data.FieldValue.IsPrimaryKey">
            <summary>
            是否主键
            </summary>
        </member>
        <member name="P:MySoft.Data.FieldValue.IsChanged">
            <summary>
            是否更改
            </summary>
        </member>
        <member name="T:MySoft.Data.Validator`1">
            <summary>
            实体验证类
            </summary>
        </member>
        <member name="M:MySoft.Data.Validator`1.#ctor(`0)">
            <summary>
            实例化验证类
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:MySoft.Data.Validator`1.Check(System.Predicate{`0},System.String)">
            <summary>
            验证实体属性的有效性并返回错误列表(验证所有的列)
            </summary>
            <param name="predicate"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Validator`1.Check(System.Predicate{`0},MySoft.Data.Field,System.String)">
            <summary>
            验证实体属性的有效性并返回错误列表(只验证需要插入或更新的列)
            </summary>
            <param name="predicate"></param>
            <param name="field"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.Validator`1.Result">
            <summary>
            验证的结果
            </summary>
        </member>
        <member name="T:MySoft.Data.ProcSection">
            <summary>
            存储过程操作实现类
            </summary>
        </member>
        <member name="M:MySoft.Data.ProcSection.AddParameters(System.Data.Common.DbParameter[])">
            <summary>
            增加多个参数到当前Proc命令
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.AddParameters(MySoft.Data.SQLParameter[])">
            <summary>
            增加多个参数到当前Proc命令
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.AddParameters(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            增加多个参数到当前Sql命令
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.AddInputParameter(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            增加一个输入参数到当前Proc命令
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.AddInputParameter(System.String,System.Data.DbType,System.Object)">
            <summary>
            增加一个输入参数到当前Proc命令
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.AddOutputParameter(System.String,System.Data.DbType,System.Int32)">
            <summary>
            增加一个输出参数到当前Proc命令
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.AddOutputParameter(System.String,System.Data.DbType)">
            <summary>
            增加一个输出参数到当前Proc命令
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.AddInputOutputParameter(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            增加一个输入输出参数到当前Proc命令
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="value"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.AddInputOutputParameter(System.String,System.Data.DbType,System.Object)">
            <summary>
            增加一个输入输出参数到当前Proc命令
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.AddReturnValueParameter(System.String,System.Data.DbType,System.Int32)">
            <summary>
            增加一个返回参数到当前Proc命令
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.AddReturnValueParameter(System.String,System.Data.DbType)">
            <summary>
            增加一个返回参数到当前Proc命令
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.Execute">
            <summary>
            执行当前Proc
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToSingle``1">
            <summary>
            执行当前Proc并返回一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToList``1">
            <summary>
            执行当前Proc并返回一个列表
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToListResult``1">
            <summary>
            执行当前Proc并返回一个列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToReader">
            <summary>
            执行当前Proc并返回一个DbReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToTable">
            <summary>
            执行当前Proc并返回一个DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToDataSet">
            <summary>
            执行当前Sql命令并返回一个DataSet
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToScalar">
            <summary>
            执行当前Proc并返回一个值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToScalar``1">
            <summary>
            执行当前Proc并返回一个值
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.Execute(System.Collections.Generic.IDictionary{System.String,System.Object}@)">
            <summary>
            执行当前Proc,并输出参数值
            </summary>
            <param name="outValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToSingle``1(System.Collections.Generic.IDictionary{System.String,System.Object}@)">
            <summary>
            执行当前Proc返回一个实体,并输出参数值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="outValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToList``1(System.Collections.Generic.IDictionary{System.String,System.Object}@)">
            <summary>
            执行当前Proc返回一个列表,并输出参数值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="outValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToListResult``1(System.Collections.Generic.IDictionary{System.String,System.Object}@)">
            <summary>
            执行当前Proc并返回一个列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="outValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToReader(System.Collections.Generic.IDictionary{System.String,System.Object}@)">
            <summary>
            执行当前Proc返回一个DbReader,并输出参数值
            </summary>
            <param name="outValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToTable(System.Collections.Generic.IDictionary{System.String,System.Object}@)">
            <summary>
            执行当前Proc返回一个DataTable,并输出参数值
            </summary>
            <param name="outValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToDataSet(System.Collections.Generic.IDictionary{System.String,System.Object}@)">
            <summary>
            执行当前Proc返回一个DataSet,并输出参数值
            </summary>
            <param name="outValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToScalar(System.Collections.Generic.IDictionary{System.String,System.Object}@)">
            <summary>
            执行当前Proc返回一个值,并输出参数值
            </summary>
            <param name="outValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToScalar``1(System.Collections.Generic.IDictionary{System.String,System.Object}@)">
            <summary>
            执行当前Proc返回一个值,并输出参数值
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="outValues"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.ProcSection.ReturnValue">
            <summary>
            获取返回值
            </summary>
        </member>
        <member name="T:MySoft.Data.DbHelper">
            <summary>
            数据库操作类
            </summary>
        </member>
        <member name="M:MySoft.Data.DbHelper.CreateCommand">
            <summary>
            创建命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbHelper.CreateParameter">
            <summary>
            创建参数
            </summary>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.DbValue">
            <summary>
            数据库值
            </summary>
        </member>
        <member name="P:MySoft.Data.DbValue.DateTime">
            <summary>
            系统时间
            </summary>
        </member>
        <member name="P:MySoft.Data.DbValue.Default">
            <summary>
            返回默认值
            </summary>
        </member>
        <member name="T:MySoft.Data.EntityState">
            <summary>
            Entity状态
            </summary>
        </member>
        <member name="F:MySoft.Data.EntityState.Insert">
            <summary>
            插入状态
            </summary>
        </member>
        <member name="F:MySoft.Data.EntityState.Update">
            <summary>
            修改状态
            </summary>
        </member>
        <member name="T:MySoft.Data.EntityBase">
            <summary>
            Entity基类
            </summary>
        </member>
        <member name="T:MySoft.Data.IValidator">
            <summary>
            实体验证接口
            </summary>
        </member>
        <member name="M:MySoft.Data.IValidator.Validation">
            <summary>
            根据实体状态来验证实体的有效性，返回一组错误信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.EntityBase.As``1">
            <summary>
            转换成另一对象
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.EntityBase.MySoft#Data#IEntityBase#ToRowReader">
            <summary>
            返回一个行阅读对象
            </summary>
        </member>
        <member name="M:MySoft.Data.EntityBase.MySoft#Data#IEntityBase#ToDictionary">
            <summary>
            返回字典对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.EntityBase.MySoft#Data#IEntityBase#GetValue(System.String)">
            <summary>
            使用propertyName获取值信息
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.EntityBase.MySoft#Data#IEntityBase#SetValue(System.String,System.Object)">
            <summary>
            使用propertyName获设置信息
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.EntityBase.MySoft#Data#IEntityBase#GetValue(MySoft.Data.Field)">
            <summary>
            使用field获取值信息
            </summary>
            <param name="FieldName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.EntityBase.MySoft#Data#IEntityBase#SetValue(MySoft.Data.Field,System.Object)">
            <summary>
            使用field获设置信息
            </summary>
            <param name="FieldName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.EntityBase.MySoft#Data#IEntityBase#GetField(System.String)">
            <summary>
            通过属性获取字段
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.EntityBase.MySoft#Data#IEntityBase#GetOriginalObject">
            <summary>
            获取原始对象
            </summary>
        </member>
        <member name="M:MySoft.Data.EntityBase.MySoft#Data#IEntityBase#GetObjectState">
            <summary>
            获取对象状态
            </summary>
        </member>
        <member name="M:MySoft.Data.EntityBase.MySoft#Data#IEntityBase#CloneObject">
            <summary>
            克隆一个对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.EntityBase.GetSequence">
            <summary>
            返回标识列的名称（如Oracle中Sequence.nextval）
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.EntityBase.GetIdentityField">
            <summary>
            获取标识列
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.EntityBase.GetPrimaryKeyFields">
            <summary>
            获取主键列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.EntityBase.GetFields">
            <summary>
            获取字段列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.EntityBase.GetValues">
            <summary>
            获取属性值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.EntityBase.GetReadOnly">
            <summary>
            获取只读属性
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.EntityBase.GetTable">
            <summary>
            获取表名
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.EntityBase.SetValues(MySoft.Data.IRowReader)">
            <summary>
            设置属性值
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:MySoft.Data.EntityBase.SetDbValues(MySoft.Data.IRowReader)">
            <summary>
            设置所有的值
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:MySoft.Data.EntityBase.GetFieldValues">
            <summary>
            获取字段及值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.EntityBase.Validation">
            <summary>
            验证实体的有效性
            </summary>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.EntityBase.SequenceName">
            <summary>
            获取系列的名称
            </summary>
        </member>
        <member name="P:MySoft.Data.EntityBase.PagingField">
            <summary>
            获取排序或分页字段
            </summary>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.EntityBase.IdentityField">
            <summary>
            获取标识列
            </summary>
        </member>
        <member name="P:MySoft.Data.EntityBase.MySoft#Data#IEntityInfo#Table">
            <summary>
            表信息
            </summary>
        </member>
        <member name="P:MySoft.Data.EntityBase.MySoft#Data#IEntityInfo#Fields">
            <summary>
            字段信息
            </summary>
        </member>
        <member name="P:MySoft.Data.EntityBase.MySoft#Data#IEntityInfo#FieldValues">
            <summary>
            字段及值信息
            </summary>
        </member>
        <member name="P:MySoft.Data.EntityBase.MySoft#Data#IEntityInfo#UpdateFields">
            <summary>
            更新字段
            </summary>
        </member>
        <member name="P:MySoft.Data.EntityBase.MySoft#Data#IEntityInfo#UpdateFieldValues">
            <summary>
            更新字段及值信息
            </summary>
        </member>
        <member name="P:MySoft.Data.EntityBase.MySoft#Data#IEntityInfo#IsUpdate">
            <summary>
            是否修改
            </summary>
        </member>
        <member name="P:MySoft.Data.EntityBase.MySoft#Data#IEntityInfo#IsReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="T:MySoft.Data.RelationPage`1">
            <summary>
            关系分页
            </summary>
        </member>
        <member name="M:MySoft.Data.RelationPage`1.ToReader(System.Int32)">
            <summary>
            返回ISourceReader
            </summary>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.RelationPage`1.ToList(System.Int32)">
            <summary>
            返回IArrayList
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.RelationPage`1.ToTable(System.Int32)">
            <summary>
            返回DataTable
            </summary>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.RelationPage`1.PageCount">
            <summary>
            返回页数
            </summary>
        </member>
        <member name="P:MySoft.Data.RelationPage`1.RowCount">
            <summary>
            返回记录数
            </summary>
        </member>
        <member name="T:MySoft.Data.ValidateResult">
            <summary>
            验证返回信息
            </summary>
        </member>
        <member name="F:MySoft.Data.ValidateResult.Default">
            <summary>
            默认的验证器
            </summary>
        </member>
        <member name="M:MySoft.Data.ValidateResult.#ctor">
            <summary>
            实例化ValidateResult
            </summary>
        </member>
        <member name="M:MySoft.Data.ValidateResult.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            实例化ValidateResult
            </summary>
            <param name="messages"></param>
        </member>
        <member name="P:MySoft.Data.ValidateResult.IsSuccess">
            <summary>
            验证是否成功
            </summary>
        </member>
        <member name="P:MySoft.Data.ValidateResult.Messages">
            <summary>
            消息列表
            </summary>
        </member>
        <member name="T:MySoft.Data.Entity">
            <summary>
            实体基类
            </summary>
        </member>
        <member name="M:MySoft.Data.Entity.Attach(MySoft.Data.Field[])">
            <summary>
            将实体置为修改状态并移除指定的列
            </summary>
            <param name="removeFields"></param>
        </member>
        <member name="M:MySoft.Data.Entity.Detach(MySoft.Data.Field[])">
            <summary>
            将实体置为插入状态并移除指定的列
            </summary>
            <param name="removeFields"></param>
        </member>
        <member name="M:MySoft.Data.Entity.AttachAll(MySoft.Data.Field[])">
            <summary>
            将实体置为修改状态并移除指定的列(所有字段)
            </summary>
            <param name="removeFields"></param>
        </member>
        <member name="M:MySoft.Data.Entity.DetachAll(MySoft.Data.Field[])">
            <summary>
            将实体置为插入状态并移除指定的列(所有字段)
            </summary>
            <param name="removeFields"></param>
        </member>
        <member name="M:MySoft.Data.Entity.AttachSet(MySoft.Data.Field[])">
            <summary>
            将实体置为修改状态并更新指定的列
            </summary>
            <param name="setFields"></param>
        </member>
        <member name="M:MySoft.Data.Entity.DetachSet(MySoft.Data.Field[])">
            <summary>
            将实体置为插入状态并插入指定的列
            </summary>
            <param name="setFields"></param>
        </member>
        <member name="M:MySoft.Data.Entity.OnPropertyValueChange(MySoft.Data.Field,System.Object,System.Object)">
            <summary>
            增加单个属性到修改列表
            </summary>
            <param name="field"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:MySoft.Data.Entity.AddFieldsToUpdate(System.Collections.Generic.IList{MySoft.Data.Field})">
            <summary>
            添加字段到修改列表
            </summary>
            <param name="fields"></param>
        </member>
        <member name="M:MySoft.Data.Entity.RemoveFieldsToUpdate(System.Collections.Generic.IList{MySoft.Data.Field})">
            <summary>
            移除字段到修改列表
            </summary>
            <param name="fields"></param>
        </member>
        <member name="M:MySoft.Data.Entity.RemoveFieldsToInsert(System.Collections.Generic.IList{MySoft.Data.Field})">
            <summary>
            移除字段到修改列表
            </summary>
            <param name="fields"></param>
        </member>
        <member name="T:MySoft.Data.RelationQuery`1">
            <summary>
            关系查询
            </summary>
        </member>
        <member name="M:MySoft.Data.RelationQuery`1.SetPagingField(System.String)">
            <summary>
            设置分页字段
            </summary>
            <param name="pagingFieldName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.RelationQuery`1.SetPagingField(MySoft.Data.Field)">
            <summary>
            设置分页字段
            </summary>
            <param name="pagingField"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.RelationQuery`1.GetPage(System.Int32)">
            <summary>
            获取分页
            </summary>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.RelationQuery`1.ToScalar">
            <summary>
            返回首行首列值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.RelationQuery`1.ToScalar``1">
            <summary>
            返回首行首列值
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.RelationQuery`1.Count">
            <summary>
            返回记录数
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.RelationQuery`1.Exists">
            <summary>
            记录是否存在
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.RelationQuery`1.ToSingle">
            <summary>
            返回T
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.RelationQuery`1.ToList">
            <summary>
            返回IList
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.RelationQuery`1.ToReader">
            <summary>
            返回ISourceReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.RelationQuery`1.ToTable">
            <summary>
            返回DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.RelationQuery`1.ToReader(System.Int32)">
            <summary>
            返回ISourceReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.RelationQuery`1.ToList(System.Int32)">
            <summary>
            返回IList
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.RelationQuery`1.ToTable(System.Int32)">
            <summary>
            返回DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.RelationQuery`1.ToListPage(System.Int32,System.Int32)">
            <summary>
            返回DataPage
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.RelationQuery`1.ToTablePage(System.Int32,System.Int32)">
            <summary>
            返回DataPage
            </summary>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.AllField`1">
            <summary>
            所有字段（特殊字段）
            </summary>
        </member>
        <member name="T:MySoft.Data.AllField">
            <summary>
            所有字段（特殊字段）
            </summary>
        </member>
        <member name="M:MySoft.Data.AllField.#ctor">
            <summary>
            All实例化
            </summary>
        </member>
        <member name="M:MySoft.Data.AllField.Remove(MySoft.Data.Field[])">
            <summary>
            选择被排除的列
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.AllField.Item(System.String)">
            <summary>
            从实体中获取属性转换成Field
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.AllField`1.#ctor">
            <summary>
            All实例化
            </summary>
        </member>
        <member name="P:MySoft.Data.AllField`1.Item(System.String)">
            <summary>
            通过属性返回字段
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.ExcludeField">
            <summary>
            用于被排除的Field
            </summary>
        </member>
        <member name="M:MySoft.Data.ExcludeField.#ctor(MySoft.Data.Field[])">
            <summary>
            实例化被排序的Field
            </summary>
            <param name="fields"></param>
        </member>
        <member name="T:MySoft.Data.ReturnValue`1">
            <summary>
            获取返回值的委托
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.FillRelation">
            <summary>
            表信息填充关系
            </summary>
        </member>
        <member name="M:MySoft.Data.FillRelation.#ctor">
            <summary>
            实例化填充关系
            </summary>
        </member>
        <member name="M:MySoft.Data.FillRelation.#ctor(MySoft.Data.SourceTable,System.String)">
            <summary>
            实例化填充关系
            </summary>
            <param name="source"></param>
            <param name="relationName"></param>
        </member>
        <member name="M:MySoft.Data.FillRelation.#ctor(MySoft.Data.SourceTable,System.String,System.String)">
            <summary>
            实例化填充关系
            </summary>
            <param name="source"></param>
            <param name="relationName"></param>
        </member>
        <member name="P:MySoft.Data.FillRelation.DataSource">
            <summary>
            填充用到的数据源
            </summary>
        </member>
        <member name="P:MySoft.Data.FillRelation.ParentName">
            <summary>
            关联的数据列
            </summary>
        </member>
        <member name="P:MySoft.Data.FillRelation.ChildName">
            <summary>
            关联的数据列
            </summary>
        </member>
        <member name="T:MySoft.Data.SourceTable">
            <summary>
            数据源
            </summary>
        </member>
        <member name="M:MySoft.Data.SourceTable.#ctor">
            <summary>
            实例化SourceTable
            </summary>
        </member>
        <member name="M:MySoft.Data.SourceTable.#ctor(System.String)">
            <summary>
            实例化SourceTable
            </summary>
        </member>
        <member name="M:MySoft.Data.SourceTable.#ctor(System.Data.DataTable)">
            <summary>
            实例化SourceTable
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:MySoft.Data.SourceTable.Select(System.String[])">
            <summary>
            选择某些列
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceTable.Filter(System.String)">
            <summary>
            过虑数据
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceTable.Sort(System.String)">
            <summary>
            排序数据
            </summary>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceTable.Remove(System.String[])">
            <summary>
            移除指定的列
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceTable.SetOrdinal(System.String,System.Int32)">
            <summary>
            设置列的顺序
            </summary>
            <param name="name"></param>
            <param name="index"></param>
        </member>
        <member name="M:MySoft.Data.SourceTable.Add(System.String,System.Type)">
            <summary>
            添加列
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceTable.Add(System.String,System.Type,System.String)">
            <summary>
            添加列
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceTable.Rename(System.String,System.String)">
            <summary>
            字段更名
            </summary>
            <param name="oldname"></param>
            <param name="newname"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceTable.Revalue``1(System.String,System.String,MySoft.Data.ReturnValue{``0})">
            <summary>
            按要求改变某列值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="readName"></param>
            <param name="changeName"></param>
            <param name="revalue"></param>
        </member>
        <member name="M:MySoft.Data.SourceTable.Fill(MySoft.Data.FillRelation,System.String[])">
            <summary>
            将另一个表中的某字段值按字段关联后进行填充
            </summary>
            <param name="relation"></param>
            <param name="fillNames"></param>
        </member>
        <member name="M:MySoft.Data.SourceTable.ConvertTo``1">
            <summary>
            返回指定类型的List
            </summary>
            <typeparam name="TOutput"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceTable.ConvertTo``2">
            <summary>
            返回另一类型的列表(输入为类、输出为接口，用于实体的解耦)
            </summary>
            <typeparam name="TOutput"></typeparam>
            <typeparam name="IOutput"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceTable.ConvertAll``1(System.Converter{MySoft.Data.IRowReader,``0})">
            <summary>
            返回指定类型的List
            </summary>
            <typeparam name="TOutput"></typeparam>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.SourceTable.OriginalData">
            <summary>
            获取当前DataSource
            </summary>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.SourceTable.RowCount">
            <summary>
            获取数据行数
            </summary>
        </member>
        <member name="P:MySoft.Data.SourceTable.ColumnCount">
            <summary>
            获取数据列数
            </summary>
        </member>
        <member name="P:MySoft.Data.SourceTable.Item(System.Int32)">
            <summary>
            获取行
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.SourceRow">
            <summary>
            数据行
            </summary>
        </member>
        <member name="M:MySoft.Data.SourceRow.#ctor(System.Data.DataRow)">
            <summary>
            实例化DbRow
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:MySoft.Data.SourceRow.IsDBNull(System.Int32)">
            <summary>
            判断数据是否为null
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetValue(System.Int32)">
            <summary>
            返回object
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetValue``1(System.Int32)">
            <summary>
            返回指定类型的数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.IsDBNull(System.String)">
            <summary>
            判断数据是否为null
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetValue(System.String)">
            <summary>
            返回object
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetValue``1(System.String)">
            <summary>
            返回指定类型的数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetString(System.String)">
            <summary>
            获取string
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetBytes(System.String)">
            <summary>
            获取byte[]
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetInt16(System.String)">
            <summary>
            获取short
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetInt32(System.String)">
            <summary>
            获取int
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetInt64(System.String)">
            <summary>
            获取long
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetDecimal(System.String)">
            <summary>
            获取decimal
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetDouble(System.String)">
            <summary>
            获取double
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetFloat(System.String)">
            <summary>
            获取float
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetByte(System.String)">
            <summary>
            获取byte
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetBoolean(System.String)">
            <summary>
            获取bool
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetDateTime(System.String)">
            <summary>
            获取DateTime
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetGuid(System.String)">
            <summary>
            获取Guid
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.IsDBNull(MySoft.Data.Field)">
            <summary>
            判断数据是否为null
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetValue(MySoft.Data.Field)">
            <summary>
            返回object
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetValue``1(MySoft.Data.Field)">
            <summary>
            返回指定类型的数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetString(MySoft.Data.Field)">
            <summary>
            获取string
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetBytes(MySoft.Data.Field)">
            <summary>
            获取byte[]
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetInt16(MySoft.Data.Field)">
            <summary>
            获取short
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetInt32(MySoft.Data.Field)">
            <summary>
            获取int
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetInt64(MySoft.Data.Field)">
            <summary>
            获取long
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetDecimal(MySoft.Data.Field)">
            <summary>
            获取decimal
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetDouble(MySoft.Data.Field)">
            <summary>
            获取double
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetFloat(MySoft.Data.Field)">
            <summary>
            获取float
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetByte(MySoft.Data.Field)">
            <summary>
            获取byte
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetBoolean(MySoft.Data.Field)">
            <summary>
            获取bool
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetDateTime(MySoft.Data.Field)">
            <summary>
            获取DateTime
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetGuid(MySoft.Data.Field)">
            <summary>
            获取Guid
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.SourceRow.OriginalData">
            <summary>
            获取当前DataSource
            </summary>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.SourceRow.Item(System.Int32)">
            <summary>
            按索引获取值
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.SourceRow.Item(System.String)">
            <summary>
            按名称获取值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.Design.ViewEntity">
            <summary>
            只用于显示的实体
            </summary>
        </member>
        <member name="M:MySoft.Data.Design.ViewEntity.GetFields">
            <summary>
            重载GetFields
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Design.ViewEntity.GetValues">
            <summary>
            重载GetValues
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Design.ViewEntity.SetValues(MySoft.Data.IRowReader)">
            <summary>
            重载SetValues
            </summary>
            <param name="reader"></param>
        </member>
        <member name="T:MySoft.Data.QuerySection">
            <summary>
            查询器
            </summary>
        </member>
        <member name="M:MySoft.Data.QuerySection.SetPagingField(System.String)">
            <summary>
            设置分页字段
            </summary>
            <param name="pagingFieldName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.SetPagingField(MySoft.Data.Field)">
            <summary>
            设置分页字段
            </summary>
            <param name="pagingField"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.GetPage(System.Int32)">
            <summary>
            获取分页
            </summary>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToScalar">
            <summary>
            返回首行首列值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToScalar``1">
            <summary>
            返回首行首列值
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.Count">
            <summary>
            返回记录数
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.GetPageCount(System.Int32)">
            <summary>
            获取总页数
            </summary>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.Exists">
            <summary>
            记录是否存在
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToSingle``1">
            <summary>
            返回T
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToList``1">
            <summary>
            返回IList
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToReader">
            <summary>
            返回ISourceReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToTable">
            <summary>
            返回DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToReader(System.Int32)">
            <summary>
            返回ISourceReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToList``1(System.Int32)">
            <summary>
            返回IList
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToTable(System.Int32)">
            <summary>
            返回DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToListPage``1(System.Int32,System.Int32)">
            <summary>
            返回DataPage
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToTablePage(System.Int32,System.Int32)">
            <summary>
            返回DataPage
            </summary>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
    </members>
</doc>
